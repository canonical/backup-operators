[32mINFO    [0m jubilant:_juju.py:313 cli: juju add-model --no-switch test-charm-d12163c5
[32mINFO    [0m jubilant:_juju.py:313 cli: juju deploy --model test-charm-d12163c5 any-charm minio --channel latest/edge --config 'src-overwrite={"any_charm.py": "\nimport os\nimport subprocess\nimport textwrap\nimport urllib.request\n\nimport ops\n\nfrom any_charm_base import AnyCharmBase\n\nclass AnyCharm(AnyCharmBase):\n    def __init__(self, *args):\n        super().__init__(*args)\n        self.framework.observe(self.on.install, self._on_install)\n\n    def _on_install(self, _):\n        self.unit.status = ops.MaintenanceStatus(\"downloading minio\")\n        urllib.request.urlretrieve(\n            \"https://dl.min.io/server/minio/release/linux-amd64/minio\", \"/usr/bin/minio\"\n        )\n        os.chmod(\"/usr/bin/minio\", 0o755)\n        self.unit.status = ops.MaintenanceStatus(\"setting up minio\")\n        service = textwrap.dedent(\n            \"\"\"\n            [Unit]\n            Description=minio\n            Wants=network-online.target\n            After=network-online.target\n\n            [Service]\n            Type=simple\n            Environment=\"MINIO_ROOT_USER=minioadmin\"\n            Environment=\"MINIO_ROOT_PASSWORD=minioadmin\"\n            ExecStartPre=/usr/bin/mkdir -p /srv/bacula\n            ExecStart=/usr/bin/minio server --console-address :9001 /srv\n            Restart=on-failure\n            RestartSec=5\n\n            [Install]\n            WantedBy=multi-user.target\n            \"\"\"\n        )\n        with open(\"/etc/systemd/system/minio.service\", \"w\") as f:\n            f.write(service)\n        subprocess.check_call([\"systemctl\", \"daemon-reload\"])\n        subprocess.check_call([\"systemctl\", \"enable\", \"--now\", \"minio\"])\n        self.unit.set_ports(9000, 9001)\n        self.unit.status = ops.ActiveStatus()\n"}'
[32mINFO    [0m jubilant:_juju.py:313 cli: juju deploy --model test-charm-d12163c5 ubuntu --base ubuntu@24.04
[32mINFO    [0m jubilant:_juju.py:313 cli: juju deploy --model test-charm-d12163c5 ./backup-integrator_ubuntu@24.04-amd64.charm --config fileset=/var/backups/
[32mINFO    [0m jubilant:_juju.py:313 cli: juju deploy --model test-charm-d12163c5 ./bacula-fd_ubuntu@24.04-amd64.charm --config 'schedule=Level=Full sun at 01:00, Level=Incremental mon-sat at 01:00'
[32mINFO    [0m jubilant:_juju.py:313 cli: juju deploy --model test-charm-d12163c5 ./bacula-server_ubuntu@24.04-amd64.charm
[32mINFO    [0m jubilant:_juju.py:313 cli: juju deploy --model test-charm-d12163c5 postgresql bacula-database --channel 14/stable
[32mINFO    [0m jubilant:_juju.py:313 cli: juju deploy --model test-charm-d12163c5 s3-integrator
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
+ .model.name = 'test-charm-d12163c5'
+ .model.type = 'iaas'
+ .model.controller = 'github-pr-5e828-lxd'
+ .model.cloud = 'localhost'
+ .model.version = '3.6.11'
+ .model.region = 'localhost'
+ .model.model_status.current = 'available'
+ .machines['0'].juju_status.current = 'pending'
+ .machines['0'].instance_id = 'pending'
+ .machines['0'].machine_status.current = 'allocating'
+ .machines['0'].machine_status.message = 'Creating container'
+ .machines['0'].modification_status.current = 'idle'
+ .machines['0'].base.name = 'ubuntu'
+ .machines['0'].base.channel = '22.04'
+ .machines['0'].constraints = 'arch=amd64'
+ .machines['1'].juju_status.current = 'pending'
+ .machines['1'].dns_name = '10.119.252.76'
+ .machines['1'].ip_addresses[0] = '10.119.252.76'
+ .machines['1'].instance_id = 'juju-c5f9dd-1'
+ .machines['1'].machine_status.current = 'running'
+ .machines['1'].machine_status.message = 'Running'
+ .machines['1'].modification_status.current = 'applied'
+ .machines['1'].base.name = 'ubuntu'
+ .machines['1'].base.channel = '24.04'
+ .machines['1'].constraints = 'arch=amd64'
+ .machines['1'].hardware = 'arch=amd64 cores=0 mem=0M availability-zone=runnervmxu1zt virt-type=container'
+ .machines['2'].juju_status.current = 'pending'
+ .machines['2'].instance_id = 'pending'
+ .machines['2'].machine_status.current = 'allocating'
+ .machines['2'].machine_status.message = 'Creating container'
+ .machines['2'].modification_status.current = 'idle'
+ .machines['2'].base.name = 'ubuntu'
+ .machines['2'].base.channel = '24.04'
+ .machines['2'].constraints = 'arch=amd64'
+ .machines['3'].juju_status.current = 'pending'
+ .machines['3'].instance_id = 'pending'
+ .machines['3'].machine_status.current = 'allocating'
+ .machines['3'].machine_status.message = 'acquiring LXD image'
+ .machines['3'].modification_status.current = 'idle'
+ .machines['3'].base.name = 'ubuntu'
+ .machines['3'].base.channel = '22.04'
+ .machines['3'].constraints = 'arch=amd64'
+ .machines['4'].juju_status.current = 'pending'
+ .machines['4'].instance_id = 'pending'
+ .machines['4'].machine_status.current = 'allocating'
+ .machines['4'].machine_status.message = 'starting'
+ .machines['4'].modification_status.current = 'idle'
+ .machines['4'].base.name = 'ubuntu'
+ .machines['4'].base.channel = '22.04'
+ .machines['4'].constraints = 'arch=amd64'
+ .apps['backup-integrator'].charm = 'local:backup-integrator-0'
+ .apps['backup-integrator'].charm_origin = 'local'
+ .apps['backup-integrator'].charm_name = 'backup-integrator'
+ .apps['backup-integrator'].charm_rev = 0
+ .apps['backup-integrator'].exposed = False
+ .apps['backup-integrator'].base.name = 'ubuntu'
+ .apps['backup-integrator'].base.channel = '24.04'
+ .apps['backup-integrator'].app_status.current = 'unknown'
+ .apps['backup-integrator'].endpoint_bindings[''] = 'alpha'
+ .apps['backup-integrator'].endpoint_bindings['backup'] = 'alpha'
+ .apps['backup-integrator'].endpoint_bindings['juju-info'] = 'alpha'
+ .apps['bacula-database'].charm = 'postgresql'
+ .apps['bacula-database'].charm_origin = 'charmhub'
+ .apps['bacula-database'].charm_name = 'postgresql'
+ .apps['bacula-database'].charm_rev = 936
+ .apps['bacula-database'].exposed = False
+ .apps['bacula-database'].base.name = 'ubuntu'
+ .apps['bacula-database'].base.channel = '22.04'
+ .apps['bacula-database'].charm_channel = '14/stable'
+ .apps['bacula-database'].app_status.current = 'waiting'
+ .apps['bacula-database'].app_status.message = 'waiting for machine'
+ .apps['bacula-database'].relations['database-peers'][0].related_app = 'bacula-database'
+ .apps['bacula-database'].relations['database-peers'][0].interface = 'postgresql_peers'
+ .apps['bacula-database'].relations['database-peers'][0].scope = 'global'
+ .apps['bacula-database'].relations['restart'][0].related_app = 'bacula-database'
+ .apps['bacula-database'].relations['restart'][0].interface = 'rolling_op'
+ .apps['bacula-database'].relations['restart'][0].scope = 'global'
+ .apps['bacula-database'].relations['upgrade'][0].related_app = 'bacula-database'
+ .apps['bacula-database'].relations['upgrade'][0].interface = 'upgrade'
+ .apps['bacula-database'].relations['upgrade'][0].scope = 'global'
+ .apps['bacula-database'].units['bacula-database/0'].workload_status.current = 'waiting'
+ .apps['bacula-database'].units['bacula-database/0'].workload_status.message = 'waiting for machine'
+ .apps['bacula-database'].units['bacula-database/0'].juju_status.current = 'allocating'
+ .apps['bacula-database'].units['bacula-database/0'].machine = '3'
+ .apps['bacula-database'].endpoint_bindings[''] = 'alpha'
+ .apps['bacula-database'].endpoint_bindings['certificates'] = 'alpha'
+ .apps['bacula-database'].endpoint_bindings['cos-agent'] = 'alpha'
+ .apps['bacula-database'].endpoint_bindings['database'] = 'alpha'
+ .apps['bacula-database'].endpoint_bindings['database-peers'] = 'alpha'
+ .apps['bacula-database'].endpoint_bindings['db'] = 'alpha'
+ .apps['bacula-database'].endpoint_bindings['db-admin'] = 'alpha'
+ .apps['bacula-database'].endpoint_bindings['ldap'] = 'alpha'
+ .apps['bacula-database'].endpoint_bindings['receive-ca-cert'] = 'alpha'
+ .apps['bacula-database'].endpoint_bindings['replication'] = 'alpha'
+ .apps['bacula-database'].endpoint_bindings['replication-offer'] = 'alpha'
+ .apps['bacula-database'].endpoint_bindings['restart'] = 'alpha'
+ .apps['bacula-database'].endpoint_bindings['s3-parameters'] = 'alpha'
+ .apps['bacula-database'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['bacula-database'].endpoint_bindings['upgrade'] = 'alpha'
+ .apps['bacula-fd'].charm = 'local:bacula-fd-0'
+ .apps['bacula-fd'].charm_origin = 'local'
+ .apps['bacula-fd'].charm_name = 'bacula-fd'
+ .apps['bacula-fd'].charm_rev = 0
+ .apps['bacula-fd'].exposed = False
+ .apps['bacula-fd'].base.name = 'ubuntu'
+ .apps['bacula-fd'].base.channel = '24.04'
+ .apps['bacula-fd'].app_status.current = 'unknown'
+ .apps['bacula-fd'].relations['bacula-peer'][0].related_app = 'bacula-fd'
+ .apps['bacula-fd'].relations['bacula-peer'][0].interface = 'bacula_peer'
+ .apps['bacula-fd'].relations['bacula-peer'][0].scope = 'global'
+ .apps['bacula-fd'].endpoint_bindings[''] = 'alpha'
+ .apps['bacula-fd'].endpoint_bindings['backup'] = 'alpha'
+ .apps['bacula-fd'].endpoint_bindings['bacula-dir'] = 'alpha'
+ .apps['bacula-fd'].endpoint_bindings['bacula-peer'] = 'alpha'
+ .apps['bacula-fd'].endpoint_bindings['juju-info'] = 'alpha'
+ .apps['bacula-server'].charm = 'local:bacula-server-0'
+ .apps['bacula-server'].charm_origin = 'local'
+ .apps['bacula-server'].charm_name = 'bacula-server'
+ .apps['bacula-server'].charm_rev = 0
+ .apps['bacula-server'].exposed = False
+ .apps['bacula-server'].base.name = 'ubuntu'
+ .apps['bacula-server'].base.channel = '24.04'
+ .apps['bacula-server'].app_status.current = 'waiting'
+ .apps['bacula-server'].app_status.message = 'waiting for machine'
+ .apps['bacula-server'].relations['bacula-peer'][0].related_app = 'bacula-server'
+ .apps['bacula-server'].relations['bacula-peer'][0].interface = 'bacula_peer'
+ .apps['bacula-server'].relations['bacula-peer'][0].scope = 'global'
+ .apps['bacula-server'].units['bacula-server/0'].workload_status.current = 'waiting'
+ .apps['bacula-server'].units['bacula-server/0'].workload_status.message = 'waiting for machine'
+ .apps['bacula-server'].units['bacula-server/0'].juju_status.current = 'allocating'
+ .apps['bacula-server'].units['bacula-server/0'].machine = '2'
+ .apps['bacula-server'].endpoint_bindings[''] = 'alpha'
+ .apps['bacula-server'].endpoint_bindings['bacula-dir'] = 'alpha'
+ .apps['bacula-server'].endpoint_bindings['bacula-peer'] = 'alpha'
+ .apps['bacula-server'].endpoint_bindings['postgresql'] = 'alpha'
+ .apps['bacula-server'].endpoint_bindings['s3'] = 'alpha'
+ .apps['minio'].charm = 'any-charm'
+ .apps['minio'].charm_origin = 'charmhub'
+ .apps['minio'].charm_name = 'any-charm'
+ .apps['minio'].charm_rev = 92
+ .apps['minio'].exposed = False
+ .apps['minio'].base.name = 'ubuntu'
+ .apps['minio'].base.channel = '22.04'
+ .apps['minio'].charm_channel = 'latest/beta'
+ .apps['minio'].app_status.current = 'waiting'
+ .apps['minio'].app_status.message = 'waiting for machine'
+ .apps['minio'].relations['peer-any'][0].related_app = 'minio'
+ .apps['minio'].relations['peer-any'][0].interface = 'peer-any'
+ .apps['minio'].relations['peer-any'][0].scope = 'global'
+ .apps['minio'].units['minio/0'].workload_status.current = 'waiting'
+ .apps['minio'].units['minio/0'].workload_status.message = 'waiting for machine'
+ .apps['minio'].units['minio/0'].juju_status.current = 'allocating'
+ .apps['minio'].units['minio/0'].machine = '0'
+ .apps['minio'].endpoint_bindings[''] = 'alpha'
+ .apps['minio'].endpoint_bindings['dns-record'] = 'alpha'
+ .apps['minio'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['minio'].endpoint_bindings['ldap'] = 'alpha'
+ .apps['minio'].endpoint_bindings['nginx-route'] = 'alpha'
+ .apps['minio'].endpoint_bindings['peer-any'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-aar'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-agent-auth'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-airbyte-server'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-alertmanager-dispatch'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-alertmanager-remote-configuration'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-anbox-stream-gateway'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-any'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-apache-vhost-config'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-apache-website'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-arangodb'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-auth-proxy'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-autoscaling'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-aws-iam'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-aws-integration'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-azure-integration'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-barbican-hsm'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-barbican-secrets'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-baremetal'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-bgp'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-bind-rndc'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-block-storage'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-cassandra'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-catalogue'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ceilometer'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ceph-admin'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ceph-bootstrap'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ceph-client'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ceph-dashboard'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ceph-iscsi-admin-access'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ceph-mds'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ceph-osd'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ceph-radosgw'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ceph-rbd-mirror'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-certificate-transfer'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-cinder'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-cinder-backend'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-cinder-backup'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-cinder-ceph-key'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-cinder-gw'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-cinder-nedge'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-cloudflared-route'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-config-server'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-container-runtime'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-containerd'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-containers'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-cos-agent'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-cos-k8s-tokens'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-dashboard'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-dashboard-plugin'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-db'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-db2'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-designate'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-dex-oidc-config'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-dns-record'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-dns-transfer'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-docker-registry'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-dockerhost'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-elastic-beats'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-elasticsearch'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-elasticsearch-datastore'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ephemeral-backend'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-etcd'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-etcd-proxy'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-event-service'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-external-cloud-provider'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-external-provider'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-fiveg-core-gnb'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-fiveg-n2'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-fluentbit'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-forward-auth'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ftn-compiler'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-gcp-integration'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-generic-ip-port-user-pass'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-giraph'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-glance'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-glance-backend'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-glance-simplestreams-sync'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-glauth-auxiliary'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-gnocchi'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-grafana-auth'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-grafana-cloud-config'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-grafana-dashboard'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-grafana-datasource'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-grafana-datasource-exchange'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-grafana-metadata'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-grafana-source'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-guacd'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-hacluster'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-haproxy-route'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-heat-plugin-subordinate'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-http'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-http-proxy'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-httpd'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-hydra-endpoints'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-influxdb-api'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-infoblox'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ingress'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ingress-auth'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ingress-per-unit'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-irc-bridge'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-istio-gateway-info'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-java'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-jenkins-agent-v0'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-jenkins-extension'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-jenkins-slave'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-k8s-cluster'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-k8s-service'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-kafka'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-kafka-client'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-kapacitor'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-karma-dashboard'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-keystone'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-keystone-admin'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-keystone-credentials'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-keystone-domain-backend'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-keystone-fid-service-provider'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-keystone-middleware'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-keystone-notifications'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-kratos-info'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-kube-control'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-kube-dns'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-kubeflow-dashboard-links'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-kubernetes-cni'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-kubernetes-info'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-landscape-hosted'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ldap'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-livepatch-pro-airgapped-server'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-lldp'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-loadbalancer'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-local-monitors'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-login-ui-endpoints'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-logs'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-logstash-client'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-loki-push-api'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-lte-core'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-lxd'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-lxd-bgp'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-lxd-dns'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-lxd-https'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-lxd-metrics'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-magma-orchestrator'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-manila-plugin'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-matrix-auth'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-memcache'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-midonet'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-mongodb'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-mongodb-client'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-monitor'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-monitors'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-mount'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-munin-node'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-mysql'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-mysql-async'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-mysql-async-replication'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-mysql-client'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-mysql-monitor'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-mysql-root'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-mysql-router'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-mysql-shared'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-nats'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-nedge'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-neutron-api'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-neutron-load-balancer'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-neutron-plugin'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-neutron-plugin-api'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-neutron-plugin-api-subordinate'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-nginx-route'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-nova'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-nova-ceilometer'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-nova-cell'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-nova-compute'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-nova-vgpu'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-nova-vmware'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-nrpe'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-nrpe-external-master'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ntp'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-oathkeeper-info'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-oauth'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-object-storage'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-odl-controller-api'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-oidc-client'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-openfga'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-opensearch-client'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-openstack-integration'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-openstack-loadbalancer'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ovsdb'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ovsdb-cluster'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ovsdb-cms'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ovsdb-manager'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ovsdb-subordinate'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-pacemaker-remote'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-parca-scrape'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-parca-store'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-peer-cluster'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-pgsql'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-placement'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-pod-defaults'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-postfix-metrics'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-postgresql-async'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-postgresql-client'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-prolog-epilog'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-prometheus'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-prometheus-manual'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-prometheus-remote-write'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-prometheus-rules'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-prometheus-scrape'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-public-address'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-quantum'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-rabbitmq'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-radosgw-multisite'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-radosgw-user'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ranger-client'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-redis'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-register-application'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-rest'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-s3'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-saml'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-script-provider'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-sdcore-config'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-sdn-plugin'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-secrets'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-sentry-metrics'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-service-control'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-service-mesh'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-shards'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-slurmd'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-slurmdbd'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-slurmrestd'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-smtp'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-squid-auth-helper'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ssl-termination'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-statistics'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-stun-server'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-swift'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-swift-global-cluster'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-swift-gw'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-swift-proxy'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-syslog'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-telegraf-exec'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-temporal'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-thruk-agent'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-tls-certificates'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-tokens'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-tracing'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-traefik-route'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-trino-client'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ubuntu'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-udldap-userdata'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-untrusted-container-runtime'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-user-group'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-vault-autounseal'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-vault-kv'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-vsd-rest-api'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-vsphere-integration'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-web-publish'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-websso-fid-service-provider'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-websso-trusted-dashboard'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-xlc-compiler'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-zookeeper'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-zuul'] = 'alpha'
+ .apps['minio'].endpoint_bindings['redis'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-aar'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-agent-auth'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-airbyte-server'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-alertmanager-dispatch'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-alertmanager-remote-configuration'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-anbox-stream-gateway'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-any'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-apache-vhost-config'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-apache-website'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-arangodb'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-auth-proxy'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-autoscaling'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-aws-iam'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-aws-integration'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-azure-integration'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-barbican-hsm'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-barbican-secrets'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-baremetal'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-bgp'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-bind-rndc'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-block-storage'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-cassandra'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-catalogue'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ceilometer'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ceph-admin'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ceph-bootstrap'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ceph-client'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ceph-dashboard'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ceph-iscsi-admin-access'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ceph-mds'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ceph-osd'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ceph-radosgw'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ceph-rbd-mirror'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-certificate-transfer'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-cinder'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-cinder-backend'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-cinder-backup'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-cinder-ceph-key'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-cinder-gw'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-cinder-nedge'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-cloudflared-route'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-config-server'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-container-runtime'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-containerd'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-containers'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-cos-agent'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-cos-k8s-tokens'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-dashboard'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-dashboard-plugin'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-db'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-db2'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-designate'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-dex-oidc-config'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-dns-record'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-dns-transfer'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-docker-registry'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-dockerhost'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-elastic-beats'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-elasticsearch'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-elasticsearch-datastore'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ephemeral-backend'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-etcd'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-etcd-proxy'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-event-service'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-external-cloud-provider'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-external-provider'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-fiveg-core-gnb'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-fiveg-n2'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-fluentbit'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-forward-auth'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ftn-compiler'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-gcp-integration'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-generic-ip-port-user-pass'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-giraph'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-glance'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-glance-backend'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-glance-simplestreams-sync'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-glauth-auxiliary'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-gnocchi'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-grafana-auth'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-grafana-cloud-config'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-grafana-dashboard'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-grafana-datasource'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-grafana-datasource-exchange'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-grafana-metadata'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-grafana-source'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-guacd'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-hacluster'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-haproxy-route'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-haproxy-route-tcp'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-heat-plugin-subordinate'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-http'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-http-proxy'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-httpd'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-hydra-endpoints'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-influxdb-api'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-infoblox'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ingress'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ingress-auth'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ingress-per-unit'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-irc-bridge'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-istio-gateway-info'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-java'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-jenkins-agent-v0'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-jenkins-extension'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-jenkins-slave'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-k8s-cluster'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-k8s-service'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-kafka'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-kafka-client'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-kapacitor'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-karma-dashboard'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-keystone'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-keystone-admin'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-keystone-credentials'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-keystone-domain-backend'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-keystone-fid-service-provider'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-keystone-middleware'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-keystone-notifications'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-kratos-info'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-kube-control'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-kube-dns'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-kubeflow-dashboard-links'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-kubernetes-cni'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-kubernetes-info'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-landscape-hosted'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ldap'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-livepatch-pro-airgapped-server'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-lldp'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-loadbalancer'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-local-monitors'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-login-ui-endpoints'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-logs'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-logstash-client'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-loki-push-api'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-lte-core'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-lxd'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-lxd-bgp'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-lxd-dns'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-lxd-https'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-lxd-metrics'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-magma-orchestrator'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-manila-plugin'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-matrix-auth'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-memcache'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-midonet'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-mongodb'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-mongodb-client'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-monitor'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-monitors'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-mount'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-munin-node'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-mysql'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-mysql-async'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-mysql-async-replication'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-mysql-client'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-mysql-monitor'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-mysql-root'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-mysql-router'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-mysql-shared'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-nats'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-nedge'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-neutron-api'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-neutron-load-balancer'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-neutron-plugin'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-neutron-plugin-api'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-neutron-plugin-api-subordinate'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-nginx-route'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-nova'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-nova-ceilometer'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-nova-cell'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-nova-compute'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-nova-vgpu'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-nova-vmware'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-nrpe'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-nrpe-external-master'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ntp'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-oathkeeper-info'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-oauth'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-object-storage'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-odl-controller-api'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-oidc-client'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-opencti-connector'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-openfga'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-opensearch-client'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-openstack-integration'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-openstack-loadbalancer'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ovsdb'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ovsdb-cluster'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ovsdb-cms'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ovsdb-manager'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ovsdb-subordinate'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-pacemaker-remote'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-parca-scrape'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-parca-store'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-peer-cluster'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-pgsql'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-placement'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-pod-defaults'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-postfix-metrics'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-postgresql-async'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-postgresql-client'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-prolog-epilog'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-prometheus'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-prometheus-manual'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-prometheus-remote-write'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-prometheus-rules'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-prometheus-scrape'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-public-address'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-quantum'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-rabbitmq'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-radosgw-multisite'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-radosgw-user'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ranger-client'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-redis'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-register-application'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-rest'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-s3'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-saml'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-script-provider'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-sdcore-config'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-sdn-plugin'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-secrets'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-sentry-metrics'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-service-control'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-service-mesh'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-shards'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-slurmd'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-slurmdbd'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-slurmrestd'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-smtp'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-squid-auth-helper'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ssl-termination'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-statistics'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-stun-server'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-swift'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-swift-global-cluster'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-swift-gw'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-swift-proxy'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-syslog'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-telegraf-exec'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-temporal'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-thruk-agent'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-tls-certificates'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-tokens'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-tracing'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-traefik-route'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-trino-client'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ubuntu'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-udldap-userdata'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-untrusted-container-runtime'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-user-group'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-vault-autounseal'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-vault-kv'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-vsd-rest-api'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-vsphere-integration'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-web-publish'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-websso-fid-service-provider'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-websso-trusted-dashboard'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-xlc-compiler'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-zookeeper'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-zuul'] = 'alpha'
+ .apps['minio'].endpoint_bindings['saml'] = 'alpha'
+ .apps['minio'].endpoint_bindings['send-ca-cert'] = 'alpha'
+ .apps['minio'].endpoint_bindings['smtp'] = 'alpha'
+ .apps['minio'].endpoint_bindings['smtp-legacy'] = 'alpha'
+ .apps['s3-integrator'].charm = 's3-integrator'
+ .apps['s3-integrator'].charm_origin = 'charmhub'
+ .apps['s3-integrator'].charm_name = 's3-integrator'
+ .apps['s3-integrator'].charm_rev = 145
+ .apps['s3-integrator'].exposed = False
+ .apps['s3-integrator'].base.name = 'ubuntu'
+ .apps['s3-integrator'].base.channel = '22.04'
+ .apps['s3-integrator'].charm_channel = '1/stable'
+ .apps['s3-integrator'].app_status.current = 'waiting'
+ .apps['s3-integrator'].app_status.message = 'waiting for machine'
+ .apps['s3-integrator'].relations['s3-integrator-peers'][0].related_app = 's3-integrator'
+ .apps['s3-integrator'].relations['s3-integrator-peers'][0].interface = 's3-integrator-peers'
+ .apps['s3-integrator'].relations['s3-integrator-peers'][0].scope = 'global'
+ .apps['s3-integrator'].units['s3-integrator/0'].workload_status.current = 'waiting'
+ .apps['s3-integrator'].units['s3-integrator/0'].workload_status.message = 'waiting for machine'
+ .apps['s3-integrator'].units['s3-integrator/0'].juju_status.current = 'allocating'
+ .apps['s3-integrator'].units['s3-integrator/0'].machine = '4'
+ .apps['s3-integrator'].endpoint_bindings[''] = 'alpha'
+ .apps['s3-integrator'].endpoint_bindings['s3-credentials'] = 'alpha'
+ .apps['s3-integrator'].endpoint_bindings['s3-integrator-peers'] = 'alpha'
+ .apps['ubuntu'].charm = 'ubuntu'
+ .apps['ubuntu'].charm_origin = 'charmhub'
+ .apps['ubuntu'].charm_name = 'ubuntu'
+ .apps['ubuntu'].charm_rev = 26
+ .apps['ubuntu'].exposed = False
+ .apps['ubuntu'].base.name = 'ubuntu'
+ .apps['ubuntu'].base.channel = '24.04'
+ .apps['ubuntu'].charm_channel = 'latest/stable'
+ .apps['ubuntu'].app_status.current = 'waiting'
+ .apps['ubuntu'].app_status.message = 'waiting for machine'
+ .apps['ubuntu'].units['ubuntu/0'].workload_status.current = 'waiting'
+ .apps['ubuntu'].units['ubuntu/0'].workload_status.message = 'waiting for machine'
+ .apps['ubuntu'].units['ubuntu/0'].juju_status.current = 'allocating'
+ .apps['ubuntu'].units['ubuntu/0'].machine = '1'
+ .apps['ubuntu'].units['ubuntu/0'].public_address = '10.119.252.76'
+ .storage.storage['pgdata/0'].kind = 'filesystem'
+ .storage.storage['pgdata/0'].status.current = 'pending'
+ .storage.storage['pgdata/0'].persistent = False
+ .storage.storage['pgdata/0'].life = 'alive'
+ .storage.storage['pgdata/0'].attachments.units['bacula-database/0'].machine = '3'
+ .storage.storage['pgdata/0'].attachments.units['bacula-database/0'].life = 'alive'
+ .storage.filesystems['3/0'].size = 0
+ .storage.filesystems['3/0'].storage = 'pgdata/0'
+ .storage.filesystems['3/0'].attachments.machines['3'].mount_point = ''
+ .storage.filesystems['3/0'].attachments.machines['3'].read_only = False
+ .storage.filesystems['3/0'].attachments.machines['3'].life = 'alive'
+ .storage.filesystems['3/0'].attachments.units['bacula-database/0'].machine = '3'
+ .storage.filesystems['3/0'].attachments.units['bacula-database/0'].life = 'alive'
+ .storage.filesystems['3/0'].life = 'alive'
+ .storage.filesystems['3/0'].status.current = 'pending'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .machines['4'].machine_status.message = 'starting'
+ .machines['4'].machine_status.message = 'Creating container'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .machines['2'].instance_id = 'pending'
- .machines['2'].machine_status.current = 'allocating'
- .machines['2'].machine_status.message = 'Creating container'
- .machines['2'].modification_status.current = 'idle'
+ .machines['2'].instance_id = 'juju-c5f9dd-2'
+ .machines['2'].machine_status.current = 'running'
+ .machines['2'].machine_status.message = 'Container started'
+ .machines['2'].modification_status.current = 'applied'
+ .machines['2'].hardware = 'arch=amd64 cores=0 mem=0M availability-zone=runnervmxu1zt virt-type=container'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .machines['2'].machine_status.message = 'Container started'
+ .machines['2'].machine_status.message = 'Running'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
+ .machines['2'].dns_name = '10.119.252.210'
+ .machines['2'].ip_addresses[0] = '10.119.252.210'
+ .apps['bacula-server'].units['bacula-server/0'].public_address = '10.119.252.210'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .machines['3'].machine_status.message = 'acquiring LXD image'
+ .machines['3'].machine_status.message = 'Failed remote LXD image download. Retrying. Attempt number 2'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .machines['0'].instance_id = 'pending'
- .machines['0'].machine_status.current = 'allocating'
- .machines['0'].machine_status.message = 'Creating container'
- .machines['0'].modification_status.current = 'idle'
+ .machines['0'].instance_id = 'juju-c5f9dd-0'
+ .machines['0'].machine_status.current = 'running'
+ .machines['0'].machine_status.message = 'Container started'
+ .machines['0'].modification_status.current = 'applied'
+ .machines['0'].hardware = 'arch=amd64 cores=0 mem=0M availability-zone=runnervmxu1zt virt-type=container'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .machines['1'].juju_status.current = 'pending'
+ .machines['1'].juju_status.current = 'started'
+ .machines['1'].juju_status.version = '3.6.11'
+ .machines['1'].hostname = 'juju-c5f9dd-1'
+ .machines['1'].network_interfaces['eth0'].ip_addresses[0] = '10.119.252.76'
+ .machines['1'].network_interfaces['eth0'].mac_address = '00:16:3e:14:83:8d'
+ .machines['1'].network_interfaces['eth0'].is_up = True
+ .machines['1'].network_interfaces['eth0'].gateway = '10.119.252.1'
+ .machines['1'].network_interfaces['eth0'].space = 'alpha'
- .apps['ubuntu'].app_status.message = 'waiting for machine'
+ .apps['ubuntu'].app_status.message = 'agent initialising'
- .apps['ubuntu'].units['ubuntu/0'].workload_status.message = 'waiting for machine'
+ .apps['ubuntu'].units['ubuntu/0'].workload_status.message = 'agent initialising'
+ .apps['ubuntu'].units['ubuntu/0'].juju_status.version = '3.6.11'
+ .apps['ubuntu'].units['ubuntu/0'].leader = True
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['ubuntu'].app_status.current = 'waiting'
- .apps['ubuntu'].app_status.message = 'agent initialising'
+ .apps['ubuntu'].app_status.current = 'maintenance'
+ .apps['ubuntu'].app_status.message = 'installing charm software'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['ubuntu'].app_status.current = 'maintenance'
- .apps['ubuntu'].app_status.message = 'installing charm software'
- .apps['ubuntu'].units['ubuntu/0'].workload_status.current = 'waiting'
- .apps['ubuntu'].units['ubuntu/0'].workload_status.message = 'agent initialising'
- .apps['ubuntu'].units['ubuntu/0'].juju_status.current = 'allocating'
+ .apps['ubuntu'].app_status.current = 'active'
+ .apps['ubuntu'].units['ubuntu/0'].workload_status.current = 'active'
+ .apps['ubuntu'].units['ubuntu/0'].juju_status.current = 'executing'
+ .apps['ubuntu'].units['ubuntu/0'].juju_status.message = 'running leader-elected hook'
+ .apps['ubuntu'].version = '24.04'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['ubuntu'].units['ubuntu/0'].juju_status.message = 'running leader-elected hook'
+ .apps['ubuntu'].units['ubuntu/0'].juju_status.message = 'running start hook'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .machines['3'].machine_status.message = 'Failed remote LXD image download. Retrying. Attempt number 2'
+ .machines['3'].machine_status.message = 'Failed remote LXD image download. Retrying. Attempt number 3'
- .machines['4'].instance_id = 'pending'
- .machines['4'].machine_status.current = 'allocating'
- .machines['4'].machine_status.message = 'Creating container'
- .machines['4'].modification_status.current = 'idle'
+ .machines['4'].instance_id = 'juju-c5f9dd-4'
+ .machines['4'].machine_status.current = 'running'
+ .machines['4'].machine_status.message = 'Container started'
+ .machines['4'].modification_status.current = 'applied'
+ .machines['4'].hardware = 'arch=amd64 cores=0 mem=0M availability-zone=runnervmxu1zt virt-type=container'
- .apps['ubuntu'].units['ubuntu/0'].juju_status.current = 'executing'
- .apps['ubuntu'].units['ubuntu/0'].juju_status.message = 'running start hook'
+ .apps['ubuntu'].units['ubuntu/0'].juju_status.current = 'idle'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
+ .machines['0'].dns_name = '10.119.252.7'
+ .machines['0'].ip_addresses[0] = '10.119.252.7'
- .machines['0'].machine_status.message = 'Container started'
+ .machines['0'].machine_status.message = 'Running'
+ .apps['minio'].units['minio/0'].public_address = '10.119.252.7'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .machines['2'].juju_status.current = 'pending'
+ .machines['2'].juju_status.current = 'started'
+ .machines['2'].juju_status.version = '3.6.11'
+ .machines['2'].hostname = 'juju-c5f9dd-2'
+ .machines['2'].network_interfaces['eth0'].ip_addresses[0] = '10.119.252.210'
+ .machines['2'].network_interfaces['eth0'].mac_address = '00:16:3e:f4:a2:31'
+ .machines['2'].network_interfaces['eth0'].is_up = True
+ .machines['2'].network_interfaces['eth0'].gateway = '10.119.252.1'
+ .machines['2'].network_interfaces['eth0'].space = 'alpha'
- .apps['bacula-server'].app_status.message = 'waiting for machine'
+ .apps['bacula-server'].app_status.message = 'agent initialising'
- .apps['bacula-server'].units['bacula-server/0'].workload_status.message = 'waiting for machine'
+ .apps['bacula-server'].units['bacula-server/0'].workload_status.message = 'agent initialising'
+ .apps['bacula-server'].units['bacula-server/0'].juju_status.version = '3.6.11'
+ .apps['bacula-server'].units['bacula-server/0'].leader = True
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['bacula-server'].app_status.current = 'waiting'
- .apps['bacula-server'].app_status.message = 'agent initialising'
+ .apps['bacula-server'].app_status.current = 'maintenance'
+ .apps['bacula-server'].app_status.message = 'installing charm software'
- .apps['bacula-server'].units['bacula-server/0'].workload_status.current = 'waiting'
- .apps['bacula-server'].units['bacula-server/0'].workload_status.message = 'agent initialising'
- .apps['bacula-server'].units['bacula-server/0'].juju_status.current = 'allocating'
+ .apps['bacula-server'].units['bacula-server/0'].workload_status.current = 'maintenance'
+ .apps['bacula-server'].units['bacula-server/0'].workload_status.message = 'installing charm software'
+ .apps['bacula-server'].units['bacula-server/0'].juju_status.current = 'executing'
+ .apps['bacula-server'].units['bacula-server/0'].juju_status.message = 'running install hook'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .machines['3'].juju_status.current = 'pending'
+ .machines['3'].juju_status.current = 'down'
+ .machines['3'].juju_status.message = 'agent is not communicating with the server'
- .machines['3'].machine_status.message = 'Failed remote LXD image download. Retrying. Attempt number 3'
+ .machines['3'].machine_status.message = 'failed to start machine 3 (attempt count exceeded: Failed remote image download: Alias already exists: juju/ubuntu@22.04/amd64), retrying in 10s (10 more attempts)'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['bacula-server'].app_status.current = 'maintenance'
- .apps['bacula-server'].app_status.message = 'installing charm software'
+ .apps['bacula-server'].app_status.current = 'waiting'
+ .apps['bacula-server'].app_status.message = 'waiting for postgresql relation'
- .apps['bacula-server'].units['bacula-server/0'].workload_status.current = 'maintenance'
- .apps['bacula-server'].units['bacula-server/0'].workload_status.message = 'installing charm software'
+ .apps['bacula-server'].units['bacula-server/0'].workload_status.current = 'waiting'
+ .apps['bacula-server'].units['bacula-server/0'].workload_status.message = 'waiting for postgresql relation'
- .apps['bacula-server'].units['bacula-server/0'].juju_status.message = 'running install hook'
+ .apps['bacula-server'].units['bacula-server/0'].juju_status.message = 'running leader-elected hook'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['bacula-server'].units['bacula-server/0'].juju_status.message = 'running leader-elected hook'
+ .apps['bacula-server'].units['bacula-server/0'].juju_status.message = 'running config-changed hook'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['bacula-server'].units['bacula-server/0'].juju_status.message = 'running config-changed hook'
+ .apps['bacula-server'].units['bacula-server/0'].juju_status.message = 'running start hook'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['bacula-server'].units['bacula-server/0'].juju_status.current = 'executing'
- .apps['bacula-server'].units['bacula-server/0'].juju_status.message = 'running start hook'
+ .apps['bacula-server'].units['bacula-server/0'].juju_status.current = 'idle'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
+ .machines['4'].dns_name = '10.119.252.159'
+ .machines['4'].ip_addresses[0] = '10.119.252.159'
- .machines['4'].machine_status.message = 'Container started'
+ .machines['4'].machine_status.message = 'Running'
+ .apps['s3-integrator'].units['s3-integrator/0'].public_address = '10.119.252.159'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .machines['3'].machine_status.message = 'failed to start machine 3 (attempt count exceeded: Failed remote image download: Alias already exists: juju/ubuntu@22.04/amd64), retrying in 10s (10 more attempts)'
+ .machines['3'].machine_status.message = 'Creating container'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .machines['3'].instance_id = 'pending'
- .machines['3'].machine_status.current = 'allocating'
- .machines['3'].machine_status.message = 'Creating container'
- .machines['3'].modification_status.current = 'idle'
+ .machines['3'].instance_id = 'juju-c5f9dd-3'
+ .machines['3'].machine_status.current = 'running'
+ .machines['3'].machine_status.message = 'Container started'
+ .machines['3'].modification_status.current = 'applied'
+ .machines['3'].hardware = 'arch=amd64 cores=0 mem=0M availability-zone=runnervmxu1zt virt-type=container'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .machines['0'].juju_status.current = 'pending'
+ .machines['0'].juju_status.current = 'started'
+ .machines['0'].juju_status.version = '3.6.11'
+ .machines['0'].hostname = 'juju-c5f9dd-0'
+ .machines['0'].network_interfaces['eth0'].ip_addresses[0] = '10.119.252.7'
+ .machines['0'].network_interfaces['eth0'].mac_address = '00:16:3e:69:19:fe'
+ .machines['0'].network_interfaces['eth0'].is_up = True
+ .machines['0'].network_interfaces['eth0'].gateway = '10.119.252.1'
+ .machines['0'].network_interfaces['eth0'].space = 'alpha'
- .apps['minio'].app_status.message = 'waiting for machine'
+ .apps['minio'].app_status.message = 'agent initialising'
- .apps['minio'].units['minio/0'].workload_status.message = 'waiting for machine'
+ .apps['minio'].units['minio/0'].workload_status.message = 'agent initialising'
+ .apps['minio'].units['minio/0'].juju_status.version = '3.6.11'
+ .apps['minio'].units['minio/0'].leader = True
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['minio'].app_status.current = 'waiting'
- .apps['minio'].app_status.message = 'agent initialising'
+ .apps['minio'].app_status.current = 'maintenance'
+ .apps['minio'].app_status.message = 'installing charm software'
- .apps['minio'].units['minio/0'].workload_status.current = 'waiting'
- .apps['minio'].units['minio/0'].workload_status.message = 'agent initialising'
- .apps['minio'].units['minio/0'].juju_status.current = 'allocating'
+ .apps['minio'].units['minio/0'].workload_status.current = 'maintenance'
+ .apps['minio'].units['minio/0'].workload_status.message = 'installing charm software'
+ .apps['minio'].units['minio/0'].juju_status.current = 'executing'
+ .apps['minio'].units['minio/0'].juju_status.message = 'running install hook'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .machines['4'].juju_status.current = 'pending'
+ .machines['4'].juju_status.current = 'started'
+ .machines['4'].juju_status.version = '3.6.11'
+ .machines['4'].hostname = 'juju-c5f9dd-4'
+ .machines['4'].network_interfaces['eth0'].ip_addresses[0] = '10.119.252.159'
+ .machines['4'].network_interfaces['eth0'].mac_address = '00:16:3e:0b:e4:cd'
+ .machines['4'].network_interfaces['eth0'].is_up = True
+ .machines['4'].network_interfaces['eth0'].gateway = '10.119.252.1'
+ .machines['4'].network_interfaces['eth0'].space = 'alpha'
- .apps['minio'].app_status.message = 'installing charm software'
+ .apps['minio'].app_status.message = 'downloading minio'
- .apps['minio'].units['minio/0'].workload_status.message = 'installing charm software'
+ .apps['minio'].units['minio/0'].workload_status.message = 'downloading minio'
- .apps['s3-integrator'].app_status.message = 'waiting for machine'
+ .apps['s3-integrator'].app_status.message = 'agent initialising'
- .apps['s3-integrator'].units['s3-integrator/0'].workload_status.message = 'waiting for machine'
+ .apps['s3-integrator'].units['s3-integrator/0'].workload_status.message = 'agent initialising'
+ .apps['s3-integrator'].units['s3-integrator/0'].juju_status.version = '3.6.11'
+ .apps['s3-integrator'].units['s3-integrator/0'].leader = True
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
+ .machines['3'].dns_name = '10.119.252.44'
+ .machines['3'].ip_addresses[0] = '10.119.252.44'
- .machines['3'].machine_status.message = 'Container started'
+ .machines['3'].machine_status.message = 'Running'
+ .apps['bacula-database'].units['bacula-database/0'].public_address = '10.119.252.44'
- .apps['minio'].app_status.current = 'maintenance'
- .apps['minio'].app_status.message = 'downloading minio'
+ .apps['minio'].app_status.current = 'active'
- .apps['minio'].units['minio/0'].workload_status.current = 'maintenance'
- .apps['minio'].units['minio/0'].workload_status.message = 'downloading minio'
+ .apps['minio'].units['minio/0'].workload_status.current = 'active'
- .apps['s3-integrator'].app_status.current = 'waiting'
- .apps['s3-integrator'].app_status.message = 'agent initialising'
+ .apps['s3-integrator'].app_status.current = 'maintenance'
+ .apps['s3-integrator'].app_status.message = 'installing charm software'
- .apps['s3-integrator'].units['s3-integrator/0'].workload_status.current = 'waiting'
- .apps['s3-integrator'].units['s3-integrator/0'].workload_status.message = 'agent initialising'
- .apps['s3-integrator'].units['s3-integrator/0'].juju_status.current = 'allocating'
+ .apps['s3-integrator'].units['s3-integrator/0'].workload_status.current = 'maintenance'
+ .apps['s3-integrator'].units['s3-integrator/0'].workload_status.message = 'installing charm software'
+ .apps['s3-integrator'].units['s3-integrator/0'].juju_status.current = 'executing'
+ .apps['s3-integrator'].units['s3-integrator/0'].juju_status.message = 'running install hook'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['minio'].units['minio/0'].juju_status.message = 'running install hook'
+ .apps['minio'].units['minio/0'].juju_status.message = 'running leader-elected hook'
+ .apps['minio'].units['minio/0'].open_ports[0] = '9000/tcp'
+ .apps['minio'].units['minio/0'].open_ports[1] = '9001/tcp'
- .apps['s3-integrator'].units['s3-integrator/0'].juju_status.message = 'running install hook'
+ .apps['s3-integrator'].units['s3-integrator/0'].juju_status.message = 'running config-changed hook'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['minio'].units['minio/0'].juju_status.message = 'running leader-elected hook'
+ .apps['minio'].units['minio/0'].juju_status.message = 'running config-changed hook'
- .apps['s3-integrator'].app_status.current = 'maintenance'
- .apps['s3-integrator'].app_status.message = 'installing charm software'
+ .apps['s3-integrator'].app_status.current = 'blocked'
+ .apps['s3-integrator'].app_status.message = "Missing parameters: ['access-key', 'secret-key']"
- .apps['s3-integrator'].units['s3-integrator/0'].workload_status.current = 'maintenance'
- .apps['s3-integrator'].units['s3-integrator/0'].workload_status.message = 'installing charm software'
- .apps['s3-integrator'].units['s3-integrator/0'].juju_status.current = 'executing'
- .apps['s3-integrator'].units['s3-integrator/0'].juju_status.message = 'running config-changed hook'
+ .apps['s3-integrator'].units['s3-integrator/0'].workload_status.current = 'blocked'
+ .apps['s3-integrator'].units['s3-integrator/0'].workload_status.message = "Missing parameters: ['access-key', 'secret-key']"
+ .apps['s3-integrator'].units['s3-integrator/0'].juju_status.current = 'idle'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['minio'].units['minio/0'].juju_status.current = 'executing'
- .apps['minio'].units['minio/0'].juju_status.message = 'running config-changed hook'
+ .apps['minio'].units['minio/0'].juju_status.current = 'idle'
[32mINFO    [0m jubilant:_juju.py:313 cli: juju status --model test-charm-d12163c5 --format json
[32mINFO    [0m jubilant:_juju.py:313 cli: juju config --model test-charm-d12163c5 s3-integrator endpoint=http://10.119.252.7:9000 bucket=bacula s3-uri-style=path
[32mINFO    [0m jubilant:_juju.py:313 cli: juju run --model test-charm-d12163c5 --format json s3-integrator/0 sync-s3-credentials --params /home/runner/snap/juju/common/tmpvk411whj
[32mINFO    [0m jubilant:_juju.py:313 cli: juju integrate --model test-charm-d12163c5 ubuntu:juju-info backup-integrator
[32mINFO    [0m jubilant:_juju.py:313 cli: juju integrate --model test-charm-d12163c5 ubuntu:juju-info bacula-fd
[32mINFO    [0m jubilant:_juju.py:313 cli: juju integrate --model test-charm-d12163c5 backup-integrator:backup bacula-fd
[32mINFO    [0m jubilant:_juju.py:313 cli: juju integrate --model test-charm-d12163c5 bacula-server bacula-database
[32mINFO    [0m jubilant:_juju.py:313 cli: juju integrate --model test-charm-d12163c5 bacula-server s3-integrator
[32mINFO    [0m jubilant:_juju.py:313 cli: juju integrate --model test-charm-d12163c5 bacula-server bacula-fd
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
+ .model.name = 'test-charm-d12163c5'
+ .model.type = 'iaas'
+ .model.controller = 'github-pr-5e828-lxd'
+ .model.cloud = 'localhost'
+ .model.version = '3.6.11'
+ .model.region = 'localhost'
+ .model.model_status.current = 'available'
+ .machines['0'].juju_status.current = 'started'
+ .machines['0'].juju_status.version = '3.6.11'
+ .machines['0'].hostname = 'juju-c5f9dd-0'
+ .machines['0'].dns_name = '10.119.252.7'
+ .machines['0'].ip_addresses[0] = '10.119.252.7'
+ .machines['0'].instance_id = 'juju-c5f9dd-0'
+ .machines['0'].machine_status.current = 'running'
+ .machines['0'].machine_status.message = 'Running'
+ .machines['0'].modification_status.current = 'applied'
+ .machines['0'].base.name = 'ubuntu'
+ .machines['0'].base.channel = '22.04'
+ .machines['0'].network_interfaces['eth0'].ip_addresses[0] = '10.119.252.7'
+ .machines['0'].network_interfaces['eth0'].mac_address = '00:16:3e:69:19:fe'
+ .machines['0'].network_interfaces['eth0'].is_up = True
+ .machines['0'].network_interfaces['eth0'].gateway = '10.119.252.1'
+ .machines['0'].network_interfaces['eth0'].space = 'alpha'
+ .machines['0'].constraints = 'arch=amd64'
+ .machines['0'].hardware = 'arch=amd64 cores=0 mem=0M availability-zone=runnervmxu1zt virt-type=container'
+ .machines['1'].juju_status.current = 'started'
+ .machines['1'].juju_status.version = '3.6.11'
+ .machines['1'].hostname = 'juju-c5f9dd-1'
+ .machines['1'].dns_name = '10.119.252.76'
+ .machines['1'].ip_addresses[0] = '10.119.252.76'
+ .machines['1'].instance_id = 'juju-c5f9dd-1'
+ .machines['1'].machine_status.current = 'running'
+ .machines['1'].machine_status.message = 'Running'
+ .machines['1'].modification_status.current = 'applied'
+ .machines['1'].base.name = 'ubuntu'
+ .machines['1'].base.channel = '24.04'
+ .machines['1'].network_interfaces['eth0'].ip_addresses[0] = '10.119.252.76'
+ .machines['1'].network_interfaces['eth0'].mac_address = '00:16:3e:14:83:8d'
+ .machines['1'].network_interfaces['eth0'].is_up = True
+ .machines['1'].network_interfaces['eth0'].gateway = '10.119.252.1'
+ .machines['1'].network_interfaces['eth0'].space = 'alpha'
+ .machines['1'].constraints = 'arch=amd64'
+ .machines['1'].hardware = 'arch=amd64 cores=0 mem=0M availability-zone=runnervmxu1zt virt-type=container'
+ .machines['2'].juju_status.current = 'started'
+ .machines['2'].juju_status.version = '3.6.11'
+ .machines['2'].hostname = 'juju-c5f9dd-2'
+ .machines['2'].dns_name = '10.119.252.210'
+ .machines['2'].ip_addresses[0] = '10.119.252.210'
+ .machines['2'].instance_id = 'juju-c5f9dd-2'
+ .machines['2'].machine_status.current = 'running'
+ .machines['2'].machine_status.message = 'Running'
+ .machines['2'].modification_status.current = 'applied'
+ .machines['2'].base.name = 'ubuntu'
+ .machines['2'].base.channel = '24.04'
+ .machines['2'].network_interfaces['eth0'].ip_addresses[0] = '10.119.252.210'
+ .machines['2'].network_interfaces['eth0'].mac_address = '00:16:3e:f4:a2:31'
+ .machines['2'].network_interfaces['eth0'].is_up = True
+ .machines['2'].network_interfaces['eth0'].gateway = '10.119.252.1'
+ .machines['2'].network_interfaces['eth0'].space = 'alpha'
+ .machines['2'].constraints = 'arch=amd64'
+ .machines['2'].hardware = 'arch=amd64 cores=0 mem=0M availability-zone=runnervmxu1zt virt-type=container'
+ .machines['3'].juju_status.current = 'down'
+ .machines['3'].juju_status.message = 'agent is not communicating with the server'
+ .machines['3'].dns_name = '10.119.252.44'
+ .machines['3'].ip_addresses[0] = '10.119.252.44'
+ .machines['3'].instance_id = 'juju-c5f9dd-3'
+ .machines['3'].machine_status.current = 'running'
+ .machines['3'].machine_status.message = 'Running'
+ .machines['3'].modification_status.current = 'applied'
+ .machines['3'].base.name = 'ubuntu'
+ .machines['3'].base.channel = '22.04'
+ .machines['3'].constraints = 'arch=amd64'
+ .machines['3'].hardware = 'arch=amd64 cores=0 mem=0M availability-zone=runnervmxu1zt virt-type=container'
+ .machines['4'].juju_status.current = 'started'
+ .machines['4'].juju_status.version = '3.6.11'
+ .machines['4'].hostname = 'juju-c5f9dd-4'
+ .machines['4'].dns_name = '10.119.252.159'
+ .machines['4'].ip_addresses[0] = '10.119.252.159'
+ .machines['4'].instance_id = 'juju-c5f9dd-4'
+ .machines['4'].machine_status.current = 'running'
+ .machines['4'].machine_status.message = 'Running'
+ .machines['4'].modification_status.current = 'applied'
+ .machines['4'].base.name = 'ubuntu'
+ .machines['4'].base.channel = '22.04'
+ .machines['4'].network_interfaces['eth0'].ip_addresses[0] = '10.119.252.159'
+ .machines['4'].network_interfaces['eth0'].mac_address = '00:16:3e:0b:e4:cd'
+ .machines['4'].network_interfaces['eth0'].is_up = True
+ .machines['4'].network_interfaces['eth0'].gateway = '10.119.252.1'
+ .machines['4'].network_interfaces['eth0'].space = 'alpha'
+ .machines['4'].constraints = 'arch=amd64'
+ .machines['4'].hardware = 'arch=amd64 cores=0 mem=0M availability-zone=runnervmxu1zt virt-type=container'
+ .apps['backup-integrator'].charm = 'local:backup-integrator-0'
+ .apps['backup-integrator'].charm_origin = 'local'
+ .apps['backup-integrator'].charm_name = 'backup-integrator'
+ .apps['backup-integrator'].charm_rev = 0
+ .apps['backup-integrator'].exposed = False
+ .apps['backup-integrator'].base.name = 'ubuntu'
+ .apps['backup-integrator'].base.channel = '24.04'
+ .apps['backup-integrator'].app_status.current = 'waiting'
+ .apps['backup-integrator'].app_status.message = 'agent initialising'
+ .apps['backup-integrator'].relations['backup'][0].related_app = 'bacula-fd'
+ .apps['backup-integrator'].relations['backup'][0].interface = 'backup'
+ .apps['backup-integrator'].relations['backup'][0].scope = 'global'
+ .apps['backup-integrator'].relations['juju-info'][0].related_app = 'ubuntu'
+ .apps['backup-integrator'].relations['juju-info'][0].interface = 'juju-info'
+ .apps['backup-integrator'].relations['juju-info'][0].scope = 'container'
+ .apps['backup-integrator'].subordinate_to[0] = 'ubuntu'
+ .apps['backup-integrator'].endpoint_bindings[''] = 'alpha'
+ .apps['backup-integrator'].endpoint_bindings['backup'] = 'alpha'
+ .apps['backup-integrator'].endpoint_bindings['juju-info'] = 'alpha'
+ .apps['bacula-database'].charm = 'postgresql'
+ .apps['bacula-database'].charm_origin = 'charmhub'
+ .apps['bacula-database'].charm_name = 'postgresql'
+ .apps['bacula-database'].charm_rev = 936
+ .apps['bacula-database'].exposed = False
+ .apps['bacula-database'].base.name = 'ubuntu'
+ .apps['bacula-database'].base.channel = '22.04'
+ .apps['bacula-database'].charm_channel = '14/stable'
+ .apps['bacula-database'].app_status.current = 'waiting'
+ .apps['bacula-database'].app_status.message = 'waiting for machine'
+ .apps['bacula-database'].relations['database'][0].related_app = 'bacula-server'
+ .apps['bacula-database'].relations['database'][0].interface = 'postgresql_client'
+ .apps['bacula-database'].relations['database'][0].scope = 'global'
+ .apps['bacula-database'].relations['database-peers'][0].related_app = 'bacula-database'
+ .apps['bacula-database'].relations['database-peers'][0].interface = 'postgresql_peers'
+ .apps['bacula-database'].relations['database-peers'][0].scope = 'global'
+ .apps['bacula-database'].relations['restart'][0].related_app = 'bacula-database'
+ .apps['bacula-database'].relations['restart'][0].interface = 'rolling_op'
+ .apps['bacula-database'].relations['restart'][0].scope = 'global'
+ .apps['bacula-database'].relations['upgrade'][0].related_app = 'bacula-database'
+ .apps['bacula-database'].relations['upgrade'][0].interface = 'upgrade'
+ .apps['bacula-database'].relations['upgrade'][0].scope = 'global'
+ .apps['bacula-database'].units['bacula-database/0'].workload_status.current = 'waiting'
+ .apps['bacula-database'].units['bacula-database/0'].workload_status.message = 'waiting for machine'
+ .apps['bacula-database'].units['bacula-database/0'].juju_status.current = 'allocating'
+ .apps['bacula-database'].units['bacula-database/0'].machine = '3'
+ .apps['bacula-database'].units['bacula-database/0'].public_address = '10.119.252.44'
+ .apps['bacula-database'].endpoint_bindings[''] = 'alpha'
+ .apps['bacula-database'].endpoint_bindings['certificates'] = 'alpha'
+ .apps['bacula-database'].endpoint_bindings['cos-agent'] = 'alpha'
+ .apps['bacula-database'].endpoint_bindings['database'] = 'alpha'
+ .apps['bacula-database'].endpoint_bindings['database-peers'] = 'alpha'
+ .apps['bacula-database'].endpoint_bindings['db'] = 'alpha'
+ .apps['bacula-database'].endpoint_bindings['db-admin'] = 'alpha'
+ .apps['bacula-database'].endpoint_bindings['ldap'] = 'alpha'
+ .apps['bacula-database'].endpoint_bindings['receive-ca-cert'] = 'alpha'
+ .apps['bacula-database'].endpoint_bindings['replication'] = 'alpha'
+ .apps['bacula-database'].endpoint_bindings['replication-offer'] = 'alpha'
+ .apps['bacula-database'].endpoint_bindings['restart'] = 'alpha'
+ .apps['bacula-database'].endpoint_bindings['s3-parameters'] = 'alpha'
+ .apps['bacula-database'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['bacula-database'].endpoint_bindings['upgrade'] = 'alpha'
+ .apps['bacula-fd'].charm = 'local:bacula-fd-0'
+ .apps['bacula-fd'].charm_origin = 'local'
+ .apps['bacula-fd'].charm_name = 'bacula-fd'
+ .apps['bacula-fd'].charm_rev = 0
+ .apps['bacula-fd'].exposed = False
+ .apps['bacula-fd'].base.name = 'ubuntu'
+ .apps['bacula-fd'].base.channel = '24.04'
+ .apps['bacula-fd'].app_status.current = 'waiting'
+ .apps['bacula-fd'].app_status.message = 'agent initialising'
+ .apps['bacula-fd'].relations['backup'][0].related_app = 'backup-integrator'
+ .apps['bacula-fd'].relations['backup'][0].interface = 'backup'
+ .apps['bacula-fd'].relations['backup'][0].scope = 'global'
+ .apps['bacula-fd'].relations['bacula-dir'][0].related_app = 'bacula-server'
+ .apps['bacula-fd'].relations['bacula-dir'][0].interface = 'bacula_dir'
+ .apps['bacula-fd'].relations['bacula-dir'][0].scope = 'global'
+ .apps['bacula-fd'].relations['bacula-peer'][0].related_app = 'bacula-fd'
+ .apps['bacula-fd'].relations['bacula-peer'][0].interface = 'bacula_peer'
+ .apps['bacula-fd'].relations['bacula-peer'][0].scope = 'global'
+ .apps['bacula-fd'].relations['juju-info'][0].related_app = 'ubuntu'
+ .apps['bacula-fd'].relations['juju-info'][0].interface = 'juju-info'
+ .apps['bacula-fd'].relations['juju-info'][0].scope = 'container'
+ .apps['bacula-fd'].subordinate_to[0] = 'ubuntu'
+ .apps['bacula-fd'].endpoint_bindings[''] = 'alpha'
+ .apps['bacula-fd'].endpoint_bindings['backup'] = 'alpha'
+ .apps['bacula-fd'].endpoint_bindings['bacula-dir'] = 'alpha'
+ .apps['bacula-fd'].endpoint_bindings['bacula-peer'] = 'alpha'
+ .apps['bacula-fd'].endpoint_bindings['juju-info'] = 'alpha'
+ .apps['bacula-server'].charm = 'local:bacula-server-0'
+ .apps['bacula-server'].charm_origin = 'local'
+ .apps['bacula-server'].charm_name = 'bacula-server'
+ .apps['bacula-server'].charm_rev = 0
+ .apps['bacula-server'].exposed = False
+ .apps['bacula-server'].base.name = 'ubuntu'
+ .apps['bacula-server'].base.channel = '24.04'
+ .apps['bacula-server'].app_status.current = 'waiting'
+ .apps['bacula-server'].app_status.message = 'waiting for postgresql relation'
+ .apps['bacula-server'].relations['bacula-dir'][0].related_app = 'bacula-fd'
+ .apps['bacula-server'].relations['bacula-dir'][0].interface = 'bacula_dir'
+ .apps['bacula-server'].relations['bacula-dir'][0].scope = 'global'
+ .apps['bacula-server'].relations['bacula-peer'][0].related_app = 'bacula-server'
+ .apps['bacula-server'].relations['bacula-peer'][0].interface = 'bacula_peer'
+ .apps['bacula-server'].relations['bacula-peer'][0].scope = 'global'
+ .apps['bacula-server'].relations['postgresql'][0].related_app = 'bacula-database'
+ .apps['bacula-server'].relations['postgresql'][0].interface = 'postgresql_client'
+ .apps['bacula-server'].relations['postgresql'][0].scope = 'global'
+ .apps['bacula-server'].relations['s3'][0].related_app = 's3-integrator'
+ .apps['bacula-server'].relations['s3'][0].interface = 's3'
+ .apps['bacula-server'].relations['s3'][0].scope = 'global'
+ .apps['bacula-server'].units['bacula-server/0'].workload_status.current = 'waiting'
+ .apps['bacula-server'].units['bacula-server/0'].workload_status.message = 'waiting for postgresql relation'
+ .apps['bacula-server'].units['bacula-server/0'].juju_status.current = 'executing'
+ .apps['bacula-server'].units['bacula-server/0'].juju_status.message = 'running s3-relation-created hook'
+ .apps['bacula-server'].units['bacula-server/0'].juju_status.version = '3.6.11'
+ .apps['bacula-server'].units['bacula-server/0'].leader = True
+ .apps['bacula-server'].units['bacula-server/0'].machine = '2'
+ .apps['bacula-server'].units['bacula-server/0'].public_address = '10.119.252.210'
+ .apps['bacula-server'].endpoint_bindings[''] = 'alpha'
+ .apps['bacula-server'].endpoint_bindings['bacula-dir'] = 'alpha'
+ .apps['bacula-server'].endpoint_bindings['bacula-peer'] = 'alpha'
+ .apps['bacula-server'].endpoint_bindings['postgresql'] = 'alpha'
+ .apps['bacula-server'].endpoint_bindings['s3'] = 'alpha'
+ .apps['minio'].charm = 'any-charm'
+ .apps['minio'].charm_origin = 'charmhub'
+ .apps['minio'].charm_name = 'any-charm'
+ .apps['minio'].charm_rev = 92
+ .apps['minio'].exposed = False
+ .apps['minio'].base.name = 'ubuntu'
+ .apps['minio'].base.channel = '22.04'
+ .apps['minio'].charm_channel = 'latest/beta'
+ .apps['minio'].app_status.current = 'active'
+ .apps['minio'].relations['peer-any'][0].related_app = 'minio'
+ .apps['minio'].relations['peer-any'][0].interface = 'peer-any'
+ .apps['minio'].relations['peer-any'][0].scope = 'global'
+ .apps['minio'].units['minio/0'].workload_status.current = 'active'
+ .apps['minio'].units['minio/0'].juju_status.current = 'idle'
+ .apps['minio'].units['minio/0'].juju_status.version = '3.6.11'
+ .apps['minio'].units['minio/0'].leader = True
+ .apps['minio'].units['minio/0'].machine = '0'
+ .apps['minio'].units['minio/0'].open_ports[0] = '9000/tcp'
+ .apps['minio'].units['minio/0'].open_ports[1] = '9001/tcp'
+ .apps['minio'].units['minio/0'].public_address = '10.119.252.7'
+ .apps['minio'].endpoint_bindings[''] = 'alpha'
+ .apps['minio'].endpoint_bindings['dns-record'] = 'alpha'
+ .apps['minio'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['minio'].endpoint_bindings['ldap'] = 'alpha'
+ .apps['minio'].endpoint_bindings['nginx-route'] = 'alpha'
+ .apps['minio'].endpoint_bindings['peer-any'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-aar'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-agent-auth'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-airbyte-server'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-alertmanager-dispatch'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-alertmanager-remote-configuration'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-anbox-stream-gateway'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-any'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-apache-vhost-config'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-apache-website'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-arangodb'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-auth-proxy'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-autoscaling'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-aws-iam'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-aws-integration'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-azure-integration'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-barbican-hsm'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-barbican-secrets'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-baremetal'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-bgp'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-bind-rndc'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-block-storage'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-cassandra'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-catalogue'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ceilometer'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ceph-admin'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ceph-bootstrap'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ceph-client'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ceph-dashboard'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ceph-iscsi-admin-access'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ceph-mds'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ceph-osd'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ceph-radosgw'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ceph-rbd-mirror'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-certificate-transfer'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-cinder'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-cinder-backend'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-cinder-backup'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-cinder-ceph-key'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-cinder-gw'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-cinder-nedge'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-cloudflared-route'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-config-server'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-container-runtime'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-containerd'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-containers'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-cos-agent'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-cos-k8s-tokens'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-dashboard'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-dashboard-plugin'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-db'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-db2'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-designate'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-dex-oidc-config'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-dns-record'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-dns-transfer'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-docker-registry'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-dockerhost'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-elastic-beats'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-elasticsearch'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-elasticsearch-datastore'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ephemeral-backend'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-etcd'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-etcd-proxy'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-event-service'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-external-cloud-provider'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-external-provider'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-fiveg-core-gnb'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-fiveg-n2'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-fluentbit'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-forward-auth'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ftn-compiler'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-gcp-integration'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-generic-ip-port-user-pass'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-giraph'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-glance'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-glance-backend'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-glance-simplestreams-sync'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-glauth-auxiliary'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-gnocchi'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-grafana-auth'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-grafana-cloud-config'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-grafana-dashboard'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-grafana-datasource'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-grafana-datasource-exchange'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-grafana-metadata'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-grafana-source'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-guacd'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-hacluster'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-haproxy-route'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-heat-plugin-subordinate'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-http'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-http-proxy'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-httpd'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-hydra-endpoints'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-influxdb-api'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-infoblox'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ingress'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ingress-auth'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ingress-per-unit'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-irc-bridge'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-istio-gateway-info'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-java'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-jenkins-agent-v0'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-jenkins-extension'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-jenkins-slave'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-k8s-cluster'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-k8s-service'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-kafka'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-kafka-client'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-kapacitor'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-karma-dashboard'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-keystone'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-keystone-admin'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-keystone-credentials'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-keystone-domain-backend'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-keystone-fid-service-provider'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-keystone-middleware'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-keystone-notifications'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-kratos-info'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-kube-control'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-kube-dns'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-kubeflow-dashboard-links'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-kubernetes-cni'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-kubernetes-info'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-landscape-hosted'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ldap'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-livepatch-pro-airgapped-server'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-lldp'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-loadbalancer'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-local-monitors'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-login-ui-endpoints'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-logs'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-logstash-client'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-loki-push-api'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-lte-core'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-lxd'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-lxd-bgp'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-lxd-dns'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-lxd-https'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-lxd-metrics'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-magma-orchestrator'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-manila-plugin'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-matrix-auth'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-memcache'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-midonet'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-mongodb'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-mongodb-client'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-monitor'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-monitors'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-mount'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-munin-node'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-mysql'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-mysql-async'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-mysql-async-replication'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-mysql-client'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-mysql-monitor'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-mysql-root'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-mysql-router'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-mysql-shared'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-nats'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-nedge'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-neutron-api'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-neutron-load-balancer'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-neutron-plugin'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-neutron-plugin-api'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-neutron-plugin-api-subordinate'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-nginx-route'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-nova'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-nova-ceilometer'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-nova-cell'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-nova-compute'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-nova-vgpu'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-nova-vmware'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-nrpe'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-nrpe-external-master'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ntp'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-oathkeeper-info'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-oauth'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-object-storage'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-odl-controller-api'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-oidc-client'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-openfga'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-opensearch-client'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-openstack-integration'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-openstack-loadbalancer'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ovsdb'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ovsdb-cluster'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ovsdb-cms'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ovsdb-manager'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ovsdb-subordinate'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-pacemaker-remote'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-parca-scrape'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-parca-store'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-peer-cluster'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-pgsql'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-placement'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-pod-defaults'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-postfix-metrics'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-postgresql-async'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-postgresql-client'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-prolog-epilog'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-prometheus'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-prometheus-manual'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-prometheus-remote-write'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-prometheus-rules'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-prometheus-scrape'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-public-address'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-quantum'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-rabbitmq'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-radosgw-multisite'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-radosgw-user'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ranger-client'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-redis'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-register-application'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-rest'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-s3'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-saml'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-script-provider'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-sdcore-config'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-sdn-plugin'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-secrets'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-sentry-metrics'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-service-control'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-service-mesh'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-shards'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-slurmd'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-slurmdbd'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-slurmrestd'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-smtp'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-squid-auth-helper'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ssl-termination'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-statistics'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-stun-server'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-swift'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-swift-global-cluster'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-swift-gw'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-swift-proxy'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-syslog'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-telegraf-exec'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-temporal'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-thruk-agent'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-tls-certificates'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-tokens'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-tracing'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-traefik-route'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-trino-client'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-ubuntu'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-udldap-userdata'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-untrusted-container-runtime'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-user-group'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-vault-autounseal'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-vault-kv'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-vsd-rest-api'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-vsphere-integration'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-web-publish'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-websso-fid-service-provider'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-websso-trusted-dashboard'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-xlc-compiler'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-zookeeper'] = 'alpha'
+ .apps['minio'].endpoint_bindings['provide-zuul'] = 'alpha'
+ .apps['minio'].endpoint_bindings['redis'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-aar'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-agent-auth'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-airbyte-server'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-alertmanager-dispatch'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-alertmanager-remote-configuration'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-anbox-stream-gateway'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-any'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-apache-vhost-config'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-apache-website'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-arangodb'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-auth-proxy'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-autoscaling'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-aws-iam'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-aws-integration'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-azure-integration'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-barbican-hsm'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-barbican-secrets'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-baremetal'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-bgp'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-bind-rndc'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-block-storage'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-cassandra'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-catalogue'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ceilometer'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ceph-admin'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ceph-bootstrap'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ceph-client'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ceph-dashboard'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ceph-iscsi-admin-access'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ceph-mds'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ceph-osd'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ceph-radosgw'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ceph-rbd-mirror'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-certificate-transfer'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-cinder'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-cinder-backend'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-cinder-backup'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-cinder-ceph-key'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-cinder-gw'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-cinder-nedge'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-cloudflared-route'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-config-server'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-container-runtime'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-containerd'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-containers'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-cos-agent'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-cos-k8s-tokens'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-dashboard'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-dashboard-plugin'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-db'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-db2'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-designate'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-dex-oidc-config'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-dns-record'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-dns-transfer'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-docker-registry'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-dockerhost'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-elastic-beats'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-elasticsearch'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-elasticsearch-datastore'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ephemeral-backend'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-etcd'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-etcd-proxy'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-event-service'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-external-cloud-provider'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-external-provider'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-fiveg-core-gnb'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-fiveg-n2'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-fluentbit'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-forward-auth'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ftn-compiler'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-gcp-integration'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-generic-ip-port-user-pass'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-giraph'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-glance'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-glance-backend'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-glance-simplestreams-sync'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-glauth-auxiliary'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-gnocchi'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-grafana-auth'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-grafana-cloud-config'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-grafana-dashboard'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-grafana-datasource'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-grafana-datasource-exchange'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-grafana-metadata'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-grafana-source'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-guacd'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-hacluster'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-haproxy-route'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-haproxy-route-tcp'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-heat-plugin-subordinate'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-http'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-http-proxy'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-httpd'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-hydra-endpoints'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-influxdb-api'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-infoblox'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ingress'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ingress-auth'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ingress-per-unit'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-irc-bridge'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-istio-gateway-info'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-java'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-jenkins-agent-v0'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-jenkins-extension'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-jenkins-slave'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-k8s-cluster'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-k8s-service'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-kafka'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-kafka-client'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-kapacitor'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-karma-dashboard'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-keystone'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-keystone-admin'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-keystone-credentials'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-keystone-domain-backend'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-keystone-fid-service-provider'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-keystone-middleware'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-keystone-notifications'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-kratos-info'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-kube-control'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-kube-dns'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-kubeflow-dashboard-links'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-kubernetes-cni'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-kubernetes-info'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-landscape-hosted'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ldap'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-livepatch-pro-airgapped-server'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-lldp'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-loadbalancer'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-local-monitors'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-login-ui-endpoints'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-logs'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-logstash-client'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-loki-push-api'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-lte-core'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-lxd'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-lxd-bgp'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-lxd-dns'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-lxd-https'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-lxd-metrics'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-magma-orchestrator'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-manila-plugin'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-matrix-auth'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-memcache'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-midonet'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-mongodb'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-mongodb-client'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-monitor'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-monitors'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-mount'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-munin-node'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-mysql'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-mysql-async'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-mysql-async-replication'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-mysql-client'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-mysql-monitor'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-mysql-root'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-mysql-router'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-mysql-shared'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-nats'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-nedge'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-neutron-api'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-neutron-load-balancer'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-neutron-plugin'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-neutron-plugin-api'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-neutron-plugin-api-subordinate'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-nginx-route'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-nova'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-nova-ceilometer'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-nova-cell'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-nova-compute'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-nova-vgpu'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-nova-vmware'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-nrpe'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-nrpe-external-master'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ntp'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-oathkeeper-info'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-oauth'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-object-storage'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-odl-controller-api'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-oidc-client'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-opencti-connector'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-openfga'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-opensearch-client'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-openstack-integration'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-openstack-loadbalancer'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ovsdb'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ovsdb-cluster'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ovsdb-cms'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ovsdb-manager'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ovsdb-subordinate'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-pacemaker-remote'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-parca-scrape'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-parca-store'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-peer-cluster'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-pgsql'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-placement'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-pod-defaults'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-postfix-metrics'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-postgresql-async'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-postgresql-client'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-prolog-epilog'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-prometheus'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-prometheus-manual'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-prometheus-remote-write'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-prometheus-rules'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-prometheus-scrape'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-public-address'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-quantum'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-rabbitmq'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-radosgw-multisite'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-radosgw-user'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ranger-client'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-redis'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-register-application'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-rest'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-s3'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-saml'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-script-provider'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-sdcore-config'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-sdn-plugin'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-secrets'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-sentry-metrics'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-service-control'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-service-mesh'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-shards'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-slurmd'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-slurmdbd'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-slurmrestd'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-smtp'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-squid-auth-helper'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ssl-termination'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-statistics'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-stun-server'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-swift'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-swift-global-cluster'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-swift-gw'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-swift-proxy'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-syslog'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-telegraf-exec'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-temporal'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-thruk-agent'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-tls-certificates'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-tokens'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-tracing'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-traefik-route'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-trino-client'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-ubuntu'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-udldap-userdata'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-untrusted-container-runtime'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-user-group'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-vault-autounseal'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-vault-kv'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-vsd-rest-api'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-vsphere-integration'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-web-publish'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-websso-fid-service-provider'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-websso-trusted-dashboard'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-xlc-compiler'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-zookeeper'] = 'alpha'
+ .apps['minio'].endpoint_bindings['require-zuul'] = 'alpha'
+ .apps['minio'].endpoint_bindings['saml'] = 'alpha'
+ .apps['minio'].endpoint_bindings['send-ca-cert'] = 'alpha'
+ .apps['minio'].endpoint_bindings['smtp'] = 'alpha'
+ .apps['minio'].endpoint_bindings['smtp-legacy'] = 'alpha'
+ .apps['s3-integrator'].charm = 's3-integrator'
+ .apps['s3-integrator'].charm_origin = 'charmhub'
+ .apps['s3-integrator'].charm_name = 's3-integrator'
+ .apps['s3-integrator'].charm_rev = 145
+ .apps['s3-integrator'].exposed = False
+ .apps['s3-integrator'].base.name = 'ubuntu'
+ .apps['s3-integrator'].base.channel = '22.04'
+ .apps['s3-integrator'].charm_channel = '1/stable'
+ .apps['s3-integrator'].app_status.current = 'active'
+ .apps['s3-integrator'].relations['s3-credentials'][0].related_app = 'bacula-server'
+ .apps['s3-integrator'].relations['s3-credentials'][0].interface = 's3'
+ .apps['s3-integrator'].relations['s3-credentials'][0].scope = 'global'
+ .apps['s3-integrator'].relations['s3-integrator-peers'][0].related_app = 's3-integrator'
+ .apps['s3-integrator'].relations['s3-integrator-peers'][0].interface = 's3-integrator-peers'
+ .apps['s3-integrator'].relations['s3-integrator-peers'][0].scope = 'global'
+ .apps['s3-integrator'].units['s3-integrator/0'].workload_status.current = 'active'
+ .apps['s3-integrator'].units['s3-integrator/0'].juju_status.current = 'executing'
+ .apps['s3-integrator'].units['s3-integrator/0'].juju_status.message = 'running s3-credentials-relation-created hook'
+ .apps['s3-integrator'].units['s3-integrator/0'].juju_status.version = '3.6.11'
+ .apps['s3-integrator'].units['s3-integrator/0'].leader = True
+ .apps['s3-integrator'].units['s3-integrator/0'].machine = '4'
+ .apps['s3-integrator'].units['s3-integrator/0'].public_address = '10.119.252.159'
+ .apps['s3-integrator'].endpoint_bindings[''] = 'alpha'
+ .apps['s3-integrator'].endpoint_bindings['s3-credentials'] = 'alpha'
+ .apps['s3-integrator'].endpoint_bindings['s3-integrator-peers'] = 'alpha'
+ .apps['ubuntu'].charm = 'ubuntu'
+ .apps['ubuntu'].charm_origin = 'charmhub'
+ .apps['ubuntu'].charm_name = 'ubuntu'
+ .apps['ubuntu'].charm_rev = 26
+ .apps['ubuntu'].exposed = False
+ .apps['ubuntu'].base.name = 'ubuntu'
+ .apps['ubuntu'].base.channel = '24.04'
+ .apps['ubuntu'].charm_channel = 'latest/stable'
+ .apps['ubuntu'].app_status.current = 'active'
+ .apps['ubuntu'].relations['juju-info'][0].related_app = 'backup-integrator'
+ .apps['ubuntu'].relations['juju-info'][0].interface = 'juju-info'
+ .apps['ubuntu'].relations['juju-info'][0].scope = 'container'
+ .apps['ubuntu'].relations['juju-info'][1].related_app = 'bacula-fd'
+ .apps['ubuntu'].relations['juju-info'][1].interface = 'juju-info'
+ .apps['ubuntu'].relations['juju-info'][1].scope = 'container'
+ .apps['ubuntu'].units['ubuntu/0'].workload_status.current = 'active'
+ .apps['ubuntu'].units['ubuntu/0'].juju_status.current = 'idle'
+ .apps['ubuntu'].units['ubuntu/0'].juju_status.version = '3.6.11'
+ .apps['ubuntu'].units['ubuntu/0'].leader = True
+ .apps['ubuntu'].units['ubuntu/0'].machine = '1'
+ .apps['ubuntu'].units['ubuntu/0'].public_address = '10.119.252.76'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['backup-integrator/0'].workload_status.current = 'waiting'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['backup-integrator/0'].workload_status.message = 'agent initialising'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['backup-integrator/0'].juju_status.current = 'allocating'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['backup-integrator/0'].juju_status.version = '3.6.11'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['backup-integrator/0'].leader = True
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['backup-integrator/0'].public_address = '10.119.252.76'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].workload_status.current = 'waiting'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].workload_status.message = 'agent initialising'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].juju_status.current = 'allocating'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].juju_status.version = '3.6.11'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].leader = True
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].public_address = '10.119.252.76'
+ .apps['ubuntu'].version = '24.04'
+ .storage.storage['pgdata/0'].kind = 'filesystem'
+ .storage.storage['pgdata/0'].status.current = 'pending'
+ .storage.storage['pgdata/0'].persistent = False
+ .storage.storage['pgdata/0'].life = 'alive'
+ .storage.storage['pgdata/0'].attachments.units['bacula-database/0'].machine = '3'
+ .storage.storage['pgdata/0'].attachments.units['bacula-database/0'].life = 'alive'
+ .storage.filesystems['3/0'].size = 0
+ .storage.filesystems['3/0'].storage = 'pgdata/0'
+ .storage.filesystems['3/0'].attachments.machines['3'].mount_point = ''
+ .storage.filesystems['3/0'].attachments.machines['3'].read_only = False
+ .storage.filesystems['3/0'].attachments.machines['3'].life = 'alive'
+ .storage.filesystems['3/0'].attachments.units['bacula-database/0'].machine = '3'
+ .storage.filesystems['3/0'].attachments.units['bacula-database/0'].life = 'alive'
+ .storage.filesystems['3/0'].life = 'alive'
+ .storage.filesystems['3/0'].status.current = 'pending'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['bacula-server'].units['bacula-server/0'].juju_status.message = 'running s3-relation-created hook'
+ .apps['bacula-server'].units['bacula-server/0'].juju_status.message = 'running bacula-dir-relation-created hook'
- .apps['s3-integrator'].units['s3-integrator/0'].juju_status.current = 'executing'
- .apps['s3-integrator'].units['s3-integrator/0'].juju_status.message = 'running s3-credentials-relation-created hook'
+ .apps['s3-integrator'].units['s3-integrator/0'].juju_status.current = 'idle'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['bacula-server'].app_status.message = 'waiting for postgresql relation'
+ .apps['bacula-server'].app_status.message = 'waiting for postgresql relation data'
- .apps['bacula-server'].units['bacula-server/0'].workload_status.message = 'waiting for postgresql relation'
+ .apps['bacula-server'].units['bacula-server/0'].workload_status.message = 'waiting for postgresql relation data'
- .apps['bacula-server'].units['bacula-server/0'].juju_status.message = 'running bacula-dir-relation-created hook'
+ .apps['bacula-server'].units['bacula-server/0'].juju_status.message = 'running s3-relation-joined hook for s3-integrator/0'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['backup-integrator'].app_status.current = 'waiting'
- .apps['backup-integrator'].app_status.message = 'agent initialising'
+ .apps['backup-integrator'].app_status.current = 'maintenance'
+ .apps['backup-integrator'].app_status.message = 'installing charm software'
- .apps['bacula-server'].units['bacula-server/0'].juju_status.message = 'running s3-relation-joined hook for s3-integrator/0'
+ .apps['bacula-server'].units['bacula-server/0'].juju_status.message = 'running s3-relation-changed hook for s3-integrator/0'
- .apps['ubuntu'].units['ubuntu/0'].subordinates['backup-integrator/0'].workload_status.current = 'waiting'
- .apps['ubuntu'].units['ubuntu/0'].subordinates['backup-integrator/0'].workload_status.message = 'agent initialising'
- .apps['ubuntu'].units['ubuntu/0'].subordinates['backup-integrator/0'].juju_status.current = 'allocating'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['backup-integrator/0'].workload_status.current = 'maintenance'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['backup-integrator/0'].workload_status.message = 'installing charm software'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['backup-integrator/0'].juju_status.current = 'executing'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['backup-integrator/0'].juju_status.message = 'running install hook'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['bacula-fd'].app_status.current = 'waiting'
- .apps['bacula-fd'].app_status.message = 'agent initialising'
+ .apps['bacula-fd'].app_status.current = 'maintenance'
+ .apps['bacula-fd'].app_status.message = 'installing charm software'
- .apps['bacula-server'].units['bacula-server/0'].juju_status.message = 'running s3-relation-changed hook for s3-integrator/0'
+ .apps['bacula-server'].units['bacula-server/0'].juju_status.message = 'running s3-relation-changed hook'
- .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].workload_status.current = 'waiting'
- .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].workload_status.message = 'agent initialising'
- .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].juju_status.current = 'allocating'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].workload_status.current = 'maintenance'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].workload_status.message = 'installing charm software'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].juju_status.current = 'executing'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].juju_status.message = 'running install hook'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['bacula-server'].units['bacula-server/0'].juju_status.message = 'running s3-relation-changed hook'
+ .apps['bacula-server'].units['bacula-server/0'].juju_status.message = 'running bacula-dir-relation-joined hook for bacula-fd/0'
- .apps['ubuntu'].units['ubuntu/0'].subordinates['backup-integrator/0'].juju_status.message = 'running install hook'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['backup-integrator/0'].juju_status.message = 'running juju-info-relation-created hook'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['bacula-fd'].app_status.current = 'maintenance'
- .apps['bacula-fd'].app_status.message = 'installing charm software'
+ .apps['bacula-fd'].app_status.current = 'waiting'
+ .apps['bacula-fd'].app_status.message = 'installing bacula-fd'
- .apps['bacula-server'].units['bacula-server/0'].juju_status.current = 'executing'
- .apps['bacula-server'].units['bacula-server/0'].juju_status.message = 'running bacula-dir-relation-joined hook for bacula-fd/0'
+ .apps['bacula-server'].units['bacula-server/0'].juju_status.current = 'idle'
- .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].workload_status.current = 'maintenance'
- .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].workload_status.message = 'installing charm software'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].workload_status.current = 'waiting'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].workload_status.message = 'installing bacula-fd'
- .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].juju_status.message = 'running install hook'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].juju_status.message = 'running bacula-peer-relation-created hook'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['bacula-fd'].app_status.message = 'installing bacula-fd'
+ .apps['bacula-fd'].app_status.message = 'waiting for backup relation data'
- .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].workload_status.current = 'waiting'
- .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].workload_status.message = 'installing bacula-fd'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].workload_status.current = 'active'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['backup-integrator'].app_status.current = 'maintenance'
- .apps['backup-integrator'].app_status.message = 'installing charm software'
+ .apps['backup-integrator'].app_status.current = 'active'
- .apps['ubuntu'].units['ubuntu/0'].subordinates['backup-integrator/0'].workload_status.current = 'maintenance'
- .apps['ubuntu'].units['ubuntu/0'].subordinates['backup-integrator/0'].workload_status.message = 'installing charm software'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['backup-integrator/0'].workload_status.current = 'active'
- .apps['ubuntu'].units['ubuntu/0'].subordinates['backup-integrator/0'].juju_status.message = 'running juju-info-relation-created hook'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['backup-integrator/0'].juju_status.message = 'running backup-relation-created hook'
- .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].workload_status.current = 'active'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].workload_status.current = 'waiting'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].workload_status.message = 'waiting for backup relation data'
- .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].juju_status.message = 'running bacula-peer-relation-created hook'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].juju_status.message = 'running backup-relation-created hook'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['ubuntu'].units['ubuntu/0'].subordinates['backup-integrator/0'].juju_status.message = 'running backup-relation-created hook'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['backup-integrator/0'].juju_status.message = 'running leader-elected hook'
- .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].juju_status.message = 'running backup-relation-created hook'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].juju_status.message = 'running juju-info-relation-created hook'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['ubuntu'].units['ubuntu/0'].subordinates['backup-integrator/0'].juju_status.message = 'running leader-elected hook'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['backup-integrator/0'].juju_status.message = 'running config-changed hook'
- .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].juju_status.message = 'running juju-info-relation-created hook'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].juju_status.message = 'running bacula-dir-relation-created hook'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['ubuntu'].units['ubuntu/0'].subordinates['backup-integrator/0'].juju_status.message = 'running config-changed hook'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['backup-integrator/0'].juju_status.message = 'running start hook'
- .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].juju_status.message = 'running bacula-dir-relation-created hook'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].juju_status.message = 'running leader-elected hook'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['bacula-fd'].app_status.message = 'waiting for backup relation data'
+ .apps['bacula-fd'].app_status.message = 'waiting for bacula-dir relation data'
- .apps['bacula-server'].units['bacula-server/0'].juju_status.current = 'idle'
+ .apps['bacula-server'].units['bacula-server/0'].juju_status.current = 'executing'
+ .apps['bacula-server'].units['bacula-server/0'].juju_status.message = 'running bacula-dir-relation-changed hook for bacula-fd/0'
- .apps['ubuntu'].units['ubuntu/0'].subordinates['backup-integrator/0'].juju_status.message = 'running start hook'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['backup-integrator/0'].juju_status.message = 'running juju-info-relation-joined hook for ubuntu/0'
- .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].workload_status.message = 'waiting for backup relation data'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].workload_status.message = 'waiting for bacula-dir relation data'
- .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].juju_status.message = 'running leader-elected hook'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].juju_status.message = 'running config-changed hook'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].open_ports[0] = '9102/tcp'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['bacula-server'].units['bacula-server/0'].juju_status.current = 'executing'
- .apps['bacula-server'].units['bacula-server/0'].juju_status.message = 'running bacula-dir-relation-changed hook for bacula-fd/0'
+ .apps['bacula-server'].units['bacula-server/0'].juju_status.current = 'idle'
- .apps['ubuntu'].units['ubuntu/0'].subordinates['backup-integrator/0'].juju_status.message = 'running juju-info-relation-joined hook for ubuntu/0'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['backup-integrator/0'].juju_status.message = 'running juju-info-relation-changed hook for ubuntu/0'
- .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].juju_status.message = 'running config-changed hook'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].juju_status.message = 'running start hook'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['ubuntu'].units['ubuntu/0'].subordinates['backup-integrator/0'].juju_status.message = 'running juju-info-relation-changed hook for ubuntu/0'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['backup-integrator/0'].juju_status.message = 'running backup-relation-joined hook for bacula-fd/0'
- .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].juju_status.message = 'running start hook'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].juju_status.message = 'running backup-relation-changed hook'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['ubuntu'].units['ubuntu/0'].subordinates['backup-integrator/0'].juju_status.current = 'executing'
- .apps['ubuntu'].units['ubuntu/0'].subordinates['backup-integrator/0'].juju_status.message = 'running backup-relation-joined hook for bacula-fd/0'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['backup-integrator/0'].juju_status.current = 'idle'
- .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].juju_status.message = 'running backup-relation-changed hook'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].juju_status.message = 'running backup-relation-joined hook for backup-integrator/0'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].juju_status.message = 'running backup-relation-joined hook for backup-integrator/0'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].juju_status.message = 'running backup-relation-changed hook for backup-integrator/0'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].juju_status.message = 'running backup-relation-changed hook for backup-integrator/0'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].juju_status.message = 'running bacula-dir-relation-changed hook for bacula-server/0'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].juju_status.current = 'executing'
- .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].juju_status.message = 'running bacula-dir-relation-changed hook for bacula-server/0'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].juju_status.current = 'idle'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .machines['3'].juju_status.current = 'down'
- .machines['3'].juju_status.message = 'agent is not communicating with the server'
+ .machines['3'].juju_status.current = 'started'
+ .machines['3'].juju_status.version = '3.6.11'
+ .machines['3'].hostname = 'juju-c5f9dd-3'
+ .machines['3'].network_interfaces['eth0'].ip_addresses[0] = '10.119.252.44'
+ .machines['3'].network_interfaces['eth0'].mac_address = '00:16:3e:3a:29:94'
+ .machines['3'].network_interfaces['eth0'].is_up = True
+ .machines['3'].network_interfaces['eth0'].gateway = '10.119.252.1'
+ .machines['3'].network_interfaces['eth0'].space = 'alpha'
- .apps['bacula-database'].app_status.message = 'waiting for machine'
+ .apps['bacula-database'].app_status.message = 'agent initialising'
- .apps['bacula-database'].units['bacula-database/0'].workload_status.message = 'waiting for machine'
+ .apps['bacula-database'].units['bacula-database/0'].workload_status.message = 'agent initialising'
+ .apps['bacula-database'].units['bacula-database/0'].juju_status.version = '3.6.11'
+ .apps['bacula-database'].units['bacula-database/0'].leader = True
- .storage.storage['pgdata/0'].status.current = 'pending'
+ .storage.storage['pgdata/0'].status.current = 'attaching'
- .storage.filesystems['3/0'].size = 0
+ .storage.filesystems['3/0'].size = 74244
+ .storage.filesystems['3/0'].provider_id = '3/0'
+ .storage.filesystems['3/0'].pool = 'rootfs'
- .storage.filesystems['3/0'].status.current = 'pending'
+ .storage.filesystems['3/0'].status.current = 'attaching'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .storage.storage['pgdata/0'].status.current = 'attaching'
+ .storage.storage['pgdata/0'].status.current = 'attached'
+ .storage.storage['pgdata/0'].attachments.units['bacula-database/0'].location = '/var/snap/charmed-postgresql/common'
- .storage.filesystems['3/0'].attachments.machines['3'].mount_point = ''
+ .storage.filesystems['3/0'].attachments.machines['3'].mount_point = '/var/snap/charmed-postgresql/common'
+ .storage.filesystems['3/0'].attachments.units['bacula-database/0'].location = '/var/snap/charmed-postgresql/common'
- .storage.filesystems['3/0'].status.current = 'attaching'
+ .storage.filesystems['3/0'].status.current = 'attached'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['bacula-database'].units['bacula-database/0'].juju_status.current = 'allocating'
+ .apps['bacula-database'].units['bacula-database/0'].juju_status.current = 'executing'
+ .apps['bacula-database'].units['bacula-database/0'].juju_status.message = 'running pgdata-storage-attached hook'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['bacula-database'].app_status.current = 'waiting'
- .apps['bacula-database'].app_status.message = 'agent initialising'
+ .apps['bacula-database'].app_status.current = 'maintenance'
+ .apps['bacula-database'].app_status.message = 'installing PostgreSQL'
- .apps['bacula-database'].units['bacula-database/0'].workload_status.current = 'waiting'
- .apps['bacula-database'].units['bacula-database/0'].workload_status.message = 'agent initialising'
+ .apps['bacula-database'].units['bacula-database/0'].workload_status.current = 'maintenance'
+ .apps['bacula-database'].units['bacula-database/0'].workload_status.message = 'installing PostgreSQL'
- .apps['bacula-database'].units['bacula-database/0'].juju_status.message = 'running pgdata-storage-attached hook'
+ .apps['bacula-database'].units['bacula-database/0'].juju_status.message = 'running install hook'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['bacula-database'].app_status.current = 'maintenance'
- .apps['bacula-database'].app_status.message = 'installing PostgreSQL'
+ .apps['bacula-database'].app_status.current = 'waiting'
+ .apps['bacula-database'].app_status.message = 'waiting to start PostgreSQL'
- .apps['bacula-database'].units['bacula-database/0'].workload_status.current = 'maintenance'
- .apps['bacula-database'].units['bacula-database/0'].workload_status.message = 'installing PostgreSQL'
+ .apps['bacula-database'].units['bacula-database/0'].workload_status.current = 'waiting'
+ .apps['bacula-database'].units['bacula-database/0'].workload_status.message = 'waiting to start PostgreSQL'
- .apps['bacula-database'].units['bacula-database/0'].juju_status.message = 'running install hook'
+ .apps['bacula-database'].units['bacula-database/0'].juju_status.message = 'running database-relation-created hook'
- .apps['bacula-server'].units['bacula-server/0'].juju_status.current = 'idle'
+ .apps['bacula-server'].units['bacula-server/0'].juju_status.current = 'executing'
+ .apps['bacula-server'].units['bacula-server/0'].juju_status.message = 'running postgresql-relation-joined hook for bacula-database/0'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['bacula-database'].units['bacula-database/0'].juju_status.message = 'running database-relation-created hook'
+ .apps['bacula-database'].units['bacula-database/0'].juju_status.message = 'running restart-relation-created hook'
- .apps['bacula-server'].units['bacula-server/0'].juju_status.current = 'executing'
- .apps['bacula-server'].units['bacula-server/0'].juju_status.message = 'running postgresql-relation-joined hook for bacula-database/0'
+ .apps['bacula-server'].units['bacula-server/0'].juju_status.current = 'idle'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['bacula-database'].units['bacula-database/0'].juju_status.message = 'running restart-relation-created hook'
+ .apps['bacula-database'].units['bacula-database/0'].juju_status.message = 'running database-peers-relation-created hook'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['bacula-database'].units['bacula-database/0'].juju_status.message = 'running database-peers-relation-created hook'
+ .apps['bacula-database'].units['bacula-database/0'].juju_status.message = 'running leader-elected hook'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['bacula-database'].units['bacula-database/0'].juju_status.message = 'running leader-elected hook'
+ .apps['bacula-database'].units['bacula-database/0'].juju_status.message = 'running secret-changed hook for secret:d40br71vm9qsjkkr3r7g'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['bacula-database'].units['bacula-database/0'].juju_status.message = 'running secret-changed hook for secret:d40br71vm9qsjkkr3r7g'
+ .apps['bacula-database'].units['bacula-database/0'].juju_status.message = 'running start hook'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
+ .apps['bacula-database'].version = '14.19'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['bacula-database'].app_status.current = 'waiting'
- .apps['bacula-database'].app_status.message = 'waiting to start PostgreSQL'
+ .apps['bacula-database'].app_status.current = 'active'
+ .apps['bacula-database'].app_status.message = 'Primary'
- .apps['bacula-database'].units['bacula-database/0'].workload_status.current = 'waiting'
- .apps['bacula-database'].units['bacula-database/0'].workload_status.message = 'waiting to start PostgreSQL'
+ .apps['bacula-database'].units['bacula-database/0'].workload_status.current = 'active'
+ .apps['bacula-database'].units['bacula-database/0'].workload_status.message = 'Primary'
- .apps['bacula-database'].units['bacula-database/0'].juju_status.message = 'running start hook'
+ .apps['bacula-database'].units['bacula-database/0'].juju_status.message = 'running secret-remove hook for secret:d40br71vm9qsjkkr3r7g/1'
+ .apps['bacula-database'].units['bacula-database/0'].open_ports[0] = '5432/tcp'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['bacula-database'].app_status.message = 'Primary'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['bacula-database'].units['bacula-database/0'].juju_status.message = 'running secret-remove hook for secret:d40br71vm9qsjkkr3r7g/1'
+ .apps['bacula-database'].units['bacula-database/0'].juju_status.message = 'running database-relation-changed hook'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['bacula-database'].units['bacula-database/0'].juju_status.message = 'running database-relation-changed hook'
+ .apps['bacula-database'].units['bacula-database/0'].juju_status.message = 'running database-relation-changed hook for bacula-server/0'
- .apps['bacula-server'].app_status.current = 'waiting'
- .apps['bacula-server'].app_status.message = 'waiting for postgresql relation data'
+ .apps['bacula-server'].app_status.current = 'maintenance'
+ .apps['bacula-server'].app_status.message = 'installing charmed-bacula-server'
- .apps['bacula-server'].units['bacula-server/0'].workload_status.current = 'waiting'
- .apps['bacula-server'].units['bacula-server/0'].workload_status.message = 'waiting for postgresql relation data'
- .apps['bacula-server'].units['bacula-server/0'].juju_status.current = 'idle'
+ .apps['bacula-server'].units['bacula-server/0'].workload_status.current = 'maintenance'
+ .apps['bacula-server'].units['bacula-server/0'].workload_status.message = 'installing charmed-bacula-server'
+ .apps['bacula-server'].units['bacula-server/0'].juju_status.current = 'executing'
+ .apps['bacula-server'].units['bacula-server/0'].juju_status.message = 'running postgresql-relation-changed hook'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['bacula-database'].units['bacula-database/0'].juju_status.message = 'running database-relation-changed hook for bacula-server/0'
+ .apps['bacula-database'].units['bacula-database/0'].juju_status.message = 'running database-peers-relation-changed hook'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['bacula-database'].units['bacula-database/0'].juju_status.message = 'running database-peers-relation-changed hook'
+ .apps['bacula-database'].units['bacula-database/0'].juju_status.message = 'running upgrade-relation-changed hook'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['bacula-database'].units['bacula-database/0'].juju_status.message = 'running upgrade-relation-changed hook'
+ .apps['bacula-database'].units['bacula-database/0'].juju_status.message = 'running commands'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['bacula-database'].units['bacula-database/0'].juju_status.current = 'executing'
- .apps['bacula-database'].units['bacula-database/0'].juju_status.message = 'running commands'
+ .apps['bacula-database'].units['bacula-database/0'].juju_status.current = 'idle'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['bacula-server'].app_status.message = 'installing charmed-bacula-server'
+ .apps['bacula-server'].app_status.message = 'initializing bacula database'
- .apps['bacula-server'].units['bacula-server/0'].workload_status.message = 'installing charmed-bacula-server'
+ .apps['bacula-server'].units['bacula-server/0'].workload_status.message = 'initializing bacula database'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['bacula-server'].app_status.message = 'initializing bacula database'
+ .apps['bacula-server'].app_status.message = 'sync bacula config'
- .apps['bacula-server'].units['bacula-server/0'].workload_status.message = 'initializing bacula database'
+ .apps['bacula-server'].units['bacula-server/0'].workload_status.message = 'sync bacula config'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['bacula-database'].units['bacula-database/0'].juju_status.current = 'idle'
+ .apps['bacula-database'].units['bacula-database/0'].juju_status.current = 'executing'
+ .apps['bacula-database'].units['bacula-database/0'].juju_status.message = 'running database-relation-changed hook for bacula-server/0'
- .apps['bacula-server'].app_status.current = 'maintenance'
- .apps['bacula-server'].app_status.message = 'sync bacula config'
+ .apps['bacula-server'].app_status.current = 'active'
- .apps['bacula-server'].units['bacula-server/0'].workload_status.current = 'maintenance'
- .apps['bacula-server'].units['bacula-server/0'].workload_status.message = 'sync bacula config'
- .apps['bacula-server'].units['bacula-server/0'].juju_status.current = 'executing'
- .apps['bacula-server'].units['bacula-server/0'].juju_status.message = 'running postgresql-relation-changed hook'
+ .apps['bacula-server'].units['bacula-server/0'].workload_status.current = 'active'
+ .apps['bacula-server'].units['bacula-server/0'].juju_status.current = 'idle'
+ .apps['bacula-server'].units['bacula-server/0'].open_ports[0] = '9095/tcp'
+ .apps['bacula-server'].units['bacula-server/0'].open_ports[1] = '9096/tcp'
+ .apps['bacula-server'].units['bacula-server/0'].open_ports[2] = '9101/tcp'
+ .apps['bacula-server'].units['bacula-server/0'].open_ports[3] = '9103/tcp'
- .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].juju_status.current = 'idle'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].juju_status.current = 'executing'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].juju_status.message = 'running bacula-dir-relation-changed hook'
[32mINFO    [0m jubilant.wait:_juju.py:1254 wait: status changed:
- .apps['bacula-database'].units['bacula-database/0'].juju_status.current = 'executing'
- .apps['bacula-database'].units['bacula-database/0'].juju_status.message = 'running database-relation-changed hook for bacula-server/0'
+ .apps['bacula-database'].units['bacula-database/0'].juju_status.current = 'idle'
- .apps['bacula-fd'].app_status.current = 'waiting'
- .apps['bacula-fd'].app_status.message = 'waiting for bacula-dir relation data'
+ .apps['bacula-fd'].app_status.current = 'active'
- .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].workload_status.current = 'waiting'
- .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].workload_status.message = 'waiting for bacula-dir relation data'
- .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].juju_status.current = 'executing'
- .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].juju_status.message = 'running bacula-dir-relation-changed hook'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].workload_status.current = 'active'
+ .apps['ubuntu'].units['ubuntu/0'].subordinates['bacula-fd/0'].juju_status.current = 'idle'
[32mINFO    [0m jubilant:_juju.py:313 cli: juju ssh --model test-charm-d12163c5 ubuntu/0 'sudo apt-get install -y postgresql'
[32mINFO    [0m jubilant:_juju.py:313 cli: juju ssh --model test-charm-d12163c5 ubuntu/0 'sudo mkdir -p /var/backups/postgresql'
[32mINFO    [0m jubilant:_juju.py:313 cli: juju ssh --model test-charm-d12163c5 ubuntu/0 'sudo chown postgres /var/backups/postgresql'
[32mINFO    [0m jubilant:_juju.py:313 cli: juju ssh --model test-charm-d12163c5 ubuntu/0 'sudo -u postgres psql -v ON_ERROR_STOP=1 postgres'
[32mINFO    [0m jubilant:_juju.py:313 cli: juju config --model test-charm-d12163c5 backup-integrator 'run-before-backup=#!/bin/bash
sudo -u postgres pg_dump -d ubuntu -c -f /var/backups/postgresql/ubuntu.dump
' 'run-after-backup=#!/bin/bash
sudo rm -f /var/backups/postgresql/ubuntu.dump
' 'run-after-restore=#!/bin/bash
sudo -u postgres psql -d ubuntu -1 -f /var/backups/postgresql/ubuntu.dump
sudo rm -f /var/backups/postgresql/ubuntu.dump
'
[32mINFO    [0m jubilant:_juju.py:313 cli: juju status --model test-charm-d12163c5 --format json
[32mINFO    [0m jubilant:_juju.py:313 cli: juju run --model test-charm-d12163c5 --format json bacula-server/0 create-api-user --wait 60s --params /home/runner/snap/juju/common/tmp0rewkjt9
[32mINFO    [0m jubilant:_juju.py:313 cli: juju status --model test-charm-d12163c5 --format json